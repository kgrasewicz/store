{"ast":null,"code":"import { zonedTimeToUtc, utcToZonedTime, format as dateFnsTzFormat } from 'date-fns-tz';\nimport { format as dateFnsFormat } from './dateUtils';\nexport var toTimeZone = function toTimeZone(date, timeZone) {\n  if (!(date instanceof Date) || !timeZone) {\n    return date;\n  }\n\n  return utcToZonedTime(date, timeZone);\n};\nexport var toLocalTimeZone = function toLocalTimeZone(date, timeZone) {\n  if (!(date instanceof Date) || !timeZone) {\n    return date;\n  }\n\n  return zonedTimeToUtc(date, timeZone);\n};\nexport var format = function format(date, formatStr, timeZone) {\n  if (timeZone) {\n    return dateFnsTzFormat(date, formatStr, {\n      timeZone: timeZone\n    });\n  }\n\n  return dateFnsFormat(date, formatStr);\n};\nexport function zonedDate(timeZone) {\n  return toTimeZone(new Date(), timeZone);\n}","map":{"version":3,"sources":["C:/Programowanie/store/node_modules/rsuite/es/utils/timeZone.js"],"names":["zonedTimeToUtc","utcToZonedTime","format","dateFnsTzFormat","dateFnsFormat","toTimeZone","date","timeZone","Date","toLocalTimeZone","formatStr","zonedDate"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,cAAzB,EAAyCC,MAAM,IAAIC,eAAnD,QAA0E,aAA1E;AACA,SAASD,MAAM,IAAIE,aAAnB,QAAwC,aAAxC;AACA,OAAO,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoC;AAC1D,MAAI,EAAED,IAAI,YAAYE,IAAlB,KAA2B,CAACD,QAAhC,EAA0C;AACxC,WAAOD,IAAP;AACD;;AAED,SAAOL,cAAc,CAACK,IAAD,EAAOC,QAAP,CAArB;AACD,CANM;AAOP,OAAO,IAAIE,eAAe,GAAG,SAASA,eAAT,CAAyBH,IAAzB,EAA+BC,QAA/B,EAAyC;AACpE,MAAI,EAAED,IAAI,YAAYE,IAAlB,KAA2B,CAACD,QAAhC,EAA0C;AACxC,WAAOD,IAAP;AACD;;AAED,SAAON,cAAc,CAACM,IAAD,EAAOC,QAAP,CAArB;AACD,CANM;AAOP,OAAO,IAAIL,MAAM,GAAG,SAASA,MAAT,CAAgBI,IAAhB,EAAsBI,SAAtB,EAAiCH,QAAjC,EAA2C;AAC7D,MAAIA,QAAJ,EAAc;AACZ,WAAOJ,eAAe,CAACG,IAAD,EAAOI,SAAP,EAAkB;AACtCH,MAAAA,QAAQ,EAAEA;AAD4B,KAAlB,CAAtB;AAGD;;AAED,SAAOH,aAAa,CAACE,IAAD,EAAOI,SAAP,CAApB;AACD,CARM;AASP,OAAO,SAASC,SAAT,CAAmBJ,QAAnB,EAA6B;AAClC,SAAOF,UAAU,CAAC,IAAIG,IAAJ,EAAD,EAAaD,QAAb,CAAjB;AACD","sourcesContent":["import { zonedTimeToUtc, utcToZonedTime, format as dateFnsTzFormat } from 'date-fns-tz';\nimport { format as dateFnsFormat } from './dateUtils';\nexport var toTimeZone = function toTimeZone(date, timeZone) {\n  if (!(date instanceof Date) || !timeZone) {\n    return date;\n  }\n\n  return utcToZonedTime(date, timeZone);\n};\nexport var toLocalTimeZone = function toLocalTimeZone(date, timeZone) {\n  if (!(date instanceof Date) || !timeZone) {\n    return date;\n  }\n\n  return zonedTimeToUtc(date, timeZone);\n};\nexport var format = function format(date, formatStr, timeZone) {\n  if (timeZone) {\n    return dateFnsTzFormat(date, formatStr, {\n      timeZone: timeZone\n    });\n  }\n\n  return dateFnsFormat(date, formatStr);\n};\nexport function zonedDate(timeZone) {\n  return toTimeZone(new Date(), timeZone);\n}"]},"metadata":{},"sourceType":"module"}