{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"caret\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"clean\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport MaskedInput from 'react-text-mask';\nimport ToggleButton from './ToggleButton';\nimport CloseButton from '../CloseButton';\nimport { useClassNames, KEY_CODE, mergeRefs } from '../utils';\nimport Plaintext from '../Plaintext';\nimport useToggleCaret from '../utils/useToggleCaret';\nvar defaultProps = {\n  as: ToggleButton,\n  classPrefix: 'picker-toggle',\n  inputMask: []\n};\nvar PickerToggle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var activeProp = props.active,\n      Component = props.as,\n      classPrefix = props.classPrefix,\n      children = props.children,\n      _props$caret = props.caret,\n      caret = _props$caret === void 0 ? true : _props$caret,\n      className = props.className,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      plaintext = props.plaintext,\n      hasValue = props.hasValue,\n      cleanableProp = props.cleanable,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      id = props.id,\n      value = props.value,\n      input = props.input,\n      inputPlaceholder = props.inputPlaceholder,\n      inputValueProp = props.inputValue,\n      inputMask = props.inputMask,\n      onInputChange = props.onInputChange,\n      onInputPressEnter = props.onInputPressEnter,\n      onInputBlur = props.onInputBlur,\n      onInputFocus = props.onInputFocus,\n      onClean = props.onClean,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      placement = props.placement,\n      caretComponent = props.caretComponent,\n      rest = _objectWithoutPropertiesLoose(props, [\"active\", \"as\", \"classPrefix\", \"children\", \"caret\", \"className\", \"disabled\", \"readOnly\", \"plaintext\", \"hasValue\", \"cleanable\", \"tabIndex\", \"id\", \"value\", \"input\", \"inputPlaceholder\", \"inputValue\", \"inputMask\", \"onInputChange\", \"onInputPressEnter\", \"onInputBlur\", \"onInputFocus\", \"onClean\", \"onFocus\", \"onBlur\", \"placement\", \"caretComponent\"]);\n\n  var inputRef = useRef();\n\n  var _useState = useState(false),\n      activeState = _useState[0],\n      setActive = _useState[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var getInputValue = useCallback(function () {\n    return typeof inputValueProp === 'undefined' ? Array.isArray(value) ? value.join(',') : value : inputValueProp;\n  }, [inputValueProp, value]);\n\n  var _useState2 = useState(getInputValue),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  useEffect(function () {\n    var value = getInputValue();\n    setInputValue(value);\n  }, [getInputValue]);\n  var classes = merge(className, withClassPrefix({\n    active: activeProp || activeState\n  }));\n  var handleFocus = useCallback(function (event) {\n    setActive(true);\n    onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);\n\n    if (input) {\n      inputRef.current.focus();\n    }\n  }, [input, onFocus]);\n  var handleBlur = useCallback(function (event) {\n    if (document.activeElement !== inputRef.current) {\n      var _inputRef$current;\n\n      setActive(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.blur();\n    }\n\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);\n  }, [onBlur]);\n\n  var handleInputBlur = function handleInputBlur(event) {\n    setInputValue(getInputValue());\n    onInputBlur === null || onInputBlur === void 0 ? void 0 : onInputBlur(event);\n  };\n\n  var handleClean = useCallback(function (event) {\n    event.stopPropagation();\n    onClean === null || onClean === void 0 ? void 0 : onClean(event);\n    setActive(false);\n  }, [onClean]);\n  var handleInputChange = useCallback(function (event) {\n    var _event$target;\n\n    var value = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value;\n    setInputValue(value);\n    onInputChange === null || onInputChange === void 0 ? void 0 : onInputChange(value, event);\n  }, [onInputChange]);\n  var handleInputKeyDown = useCallback(function (event) {\n    if (input && event.keyCode === KEY_CODE.ENTER) {\n      onInputPressEnter === null || onInputPressEnter === void 0 ? void 0 : onInputPressEnter(event);\n    }\n  }, [onInputPressEnter, input]);\n  var Caret = caretComponent !== null && caretComponent !== void 0 ? caretComponent : useToggleCaret(placement);\n\n  if (plaintext) {\n    return /*#__PURE__*/React.createElement(Plaintext, {\n      ref: ref,\n      localeKey: \"notSelected\"\n    }, hasValue ? children : null);\n  }\n\n  var cleanable = cleanableProp && hasValue && !readOnly && !plaintext; // When the component is read-only or disabled, the input is not interactive.\n\n  var inputFocused = readOnly || disabled || plaintext ? false : input && activeState;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-expanded\": activeProp,\n    \"aria-disabled\": disabled,\n    \"aria-owns\": id ? id + \"-listbox\" : undefined\n  }, rest, {\n    ref: ref,\n    disabled: disabled,\n    tabIndex: tabIndex,\n    className: classes,\n    onFocus: !disabled ? handleFocus : null // The debounce is set to 200 to solve the flicker caused by the switch between input and div.\n    ,\n    onBlur: !disabled ? debounce(handleBlur, 200) : null\n  }), /*#__PURE__*/React.createElement(MaskedInput, {\n    mask: inputMask,\n    value: Array.isArray(inputValue) ? inputValue.toString() : inputValue,\n    onBlur: handleInputBlur,\n    onFocus: onInputFocus,\n    onChange: handleInputChange,\n    onKeyDown: handleInputKeyDown,\n    id: id,\n    \"aria-hidden\": !inputFocused,\n    readOnly: !inputFocused,\n    disabled: disabled,\n    \"aria-controls\": id ? id + \"-listbox\" : undefined,\n    tabIndex: -1,\n    className: prefix('textbox', {\n      'read-only': !inputFocused\n    }),\n    placeholder: inputPlaceholder,\n    render: function render(ref, props) {\n      return /*#__PURE__*/React.createElement(\"input\", _extends({\n        ref: mergeRefs(inputRef, ref)\n      }, props));\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix(hasValue ? 'value' : 'placeholder'),\n    \"aria-placeholder\": typeof children === 'string' ? children : null\n  }, children), cleanable && /*#__PURE__*/React.createElement(CloseButton, {\n    className: prefix(_templateObject()),\n    tabIndex: -1,\n    onClick: handleClean\n  }), caret && /*#__PURE__*/React.createElement(Caret, {\n    className: prefix(_templateObject2())\n  }));\n});\nPickerToggle.displayName = 'PickerToggle';\nPickerToggle.defaultProps = defaultProps;\nPickerToggle.propTypes = {\n  classPrefix: PropTypes.string,\n  hasValue: PropTypes.bool,\n  cleanable: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  caret: PropTypes.bool,\n  as: PropTypes.elementType,\n  onClean: PropTypes.func,\n  active: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  disabled: PropTypes.bool,\n  plaintext: PropTypes.bool\n};\nexport default PickerToggle;","map":{"version":3,"sources":["C:/Programowanie/store/node_modules/rsuite/es/Picker/PickerToggle.js"],"names":["_taggedTemplateLiteralLoose","_extends","_objectWithoutPropertiesLoose","_templateObject2","data","_templateObject","React","useState","useCallback","useEffect","useRef","PropTypes","debounce","MaskedInput","ToggleButton","CloseButton","useClassNames","KEY_CODE","mergeRefs","Plaintext","useToggleCaret","defaultProps","as","classPrefix","inputMask","PickerToggle","forwardRef","props","ref","activeProp","active","Component","children","_props$caret","caret","className","disabled","readOnly","plaintext","hasValue","cleanableProp","cleanable","_props$tabIndex","tabIndex","id","value","input","inputPlaceholder","inputValueProp","inputValue","onInputChange","onInputPressEnter","onInputBlur","onInputFocus","onClean","onFocus","onBlur","placement","caretComponent","rest","inputRef","_useState","activeState","setActive","_useClassNames","withClassPrefix","merge","prefix","getInputValue","Array","isArray","join","_useState2","setInputValue","classes","handleFocus","event","current","focus","handleBlur","document","activeElement","_inputRef$current","blur","handleInputBlur","handleClean","stopPropagation","handleInputChange","_event$target","target","handleInputKeyDown","keyCode","ENTER","Caret","createElement","localeKey","inputFocused","role","undefined","mask","toString","onChange","onKeyDown","placeholder","render","onClick","displayName","propTypes","string","bool","node","elementType","func"],"mappings":"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","sourcesContent":["import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"caret\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"clean\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport MaskedInput from 'react-text-mask';\nimport ToggleButton from './ToggleButton';\nimport CloseButton from '../CloseButton';\nimport { useClassNames, KEY_CODE, mergeRefs } from '../utils';\nimport Plaintext from '../Plaintext';\nimport useToggleCaret from '../utils/useToggleCaret';\nvar defaultProps = {\n  as: ToggleButton,\n  classPrefix: 'picker-toggle',\n  inputMask: []\n};\nvar PickerToggle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var activeProp = props.active,\n      Component = props.as,\n      classPrefix = props.classPrefix,\n      children = props.children,\n      _props$caret = props.caret,\n      caret = _props$caret === void 0 ? true : _props$caret,\n      className = props.className,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      plaintext = props.plaintext,\n      hasValue = props.hasValue,\n      cleanableProp = props.cleanable,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      id = props.id,\n      value = props.value,\n      input = props.input,\n      inputPlaceholder = props.inputPlaceholder,\n      inputValueProp = props.inputValue,\n      inputMask = props.inputMask,\n      onInputChange = props.onInputChange,\n      onInputPressEnter = props.onInputPressEnter,\n      onInputBlur = props.onInputBlur,\n      onInputFocus = props.onInputFocus,\n      onClean = props.onClean,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      placement = props.placement,\n      caretComponent = props.caretComponent,\n      rest = _objectWithoutPropertiesLoose(props, [\"active\", \"as\", \"classPrefix\", \"children\", \"caret\", \"className\", \"disabled\", \"readOnly\", \"plaintext\", \"hasValue\", \"cleanable\", \"tabIndex\", \"id\", \"value\", \"input\", \"inputPlaceholder\", \"inputValue\", \"inputMask\", \"onInputChange\", \"onInputPressEnter\", \"onInputBlur\", \"onInputFocus\", \"onClean\", \"onFocus\", \"onBlur\", \"placement\", \"caretComponent\"]);\n\n  var inputRef = useRef();\n\n  var _useState = useState(false),\n      activeState = _useState[0],\n      setActive = _useState[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var getInputValue = useCallback(function () {\n    return typeof inputValueProp === 'undefined' ? Array.isArray(value) ? value.join(',') : value : inputValueProp;\n  }, [inputValueProp, value]);\n\n  var _useState2 = useState(getInputValue),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  useEffect(function () {\n    var value = getInputValue();\n    setInputValue(value);\n  }, [getInputValue]);\n  var classes = merge(className, withClassPrefix({\n    active: activeProp || activeState\n  }));\n  var handleFocus = useCallback(function (event) {\n    setActive(true);\n    onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);\n\n    if (input) {\n      inputRef.current.focus();\n    }\n  }, [input, onFocus]);\n  var handleBlur = useCallback(function (event) {\n    if (document.activeElement !== inputRef.current) {\n      var _inputRef$current;\n\n      setActive(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.blur();\n    }\n\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);\n  }, [onBlur]);\n\n  var handleInputBlur = function handleInputBlur(event) {\n    setInputValue(getInputValue());\n    onInputBlur === null || onInputBlur === void 0 ? void 0 : onInputBlur(event);\n  };\n\n  var handleClean = useCallback(function (event) {\n    event.stopPropagation();\n    onClean === null || onClean === void 0 ? void 0 : onClean(event);\n    setActive(false);\n  }, [onClean]);\n  var handleInputChange = useCallback(function (event) {\n    var _event$target;\n\n    var value = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value;\n    setInputValue(value);\n    onInputChange === null || onInputChange === void 0 ? void 0 : onInputChange(value, event);\n  }, [onInputChange]);\n  var handleInputKeyDown = useCallback(function (event) {\n    if (input && event.keyCode === KEY_CODE.ENTER) {\n      onInputPressEnter === null || onInputPressEnter === void 0 ? void 0 : onInputPressEnter(event);\n    }\n  }, [onInputPressEnter, input]);\n  var Caret = caretComponent !== null && caretComponent !== void 0 ? caretComponent : useToggleCaret(placement);\n\n  if (plaintext) {\n    return /*#__PURE__*/React.createElement(Plaintext, {\n      ref: ref,\n      localeKey: \"notSelected\"\n    }, hasValue ? children : null);\n  }\n\n  var cleanable = cleanableProp && hasValue && !readOnly && !plaintext; // When the component is read-only or disabled, the input is not interactive.\n\n  var inputFocused = readOnly || disabled || plaintext ? false : input && activeState;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-expanded\": activeProp,\n    \"aria-disabled\": disabled,\n    \"aria-owns\": id ? id + \"-listbox\" : undefined\n  }, rest, {\n    ref: ref,\n    disabled: disabled,\n    tabIndex: tabIndex,\n    className: classes,\n    onFocus: !disabled ? handleFocus : null // The debounce is set to 200 to solve the flicker caused by the switch between input and div.\n    ,\n    onBlur: !disabled ? debounce(handleBlur, 200) : null\n  }), /*#__PURE__*/React.createElement(MaskedInput, {\n    mask: inputMask,\n    value: Array.isArray(inputValue) ? inputValue.toString() : inputValue,\n    onBlur: handleInputBlur,\n    onFocus: onInputFocus,\n    onChange: handleInputChange,\n    onKeyDown: handleInputKeyDown,\n    id: id,\n    \"aria-hidden\": !inputFocused,\n    readOnly: !inputFocused,\n    disabled: disabled,\n    \"aria-controls\": id ? id + \"-listbox\" : undefined,\n    tabIndex: -1,\n    className: prefix('textbox', {\n      'read-only': !inputFocused\n    }),\n    placeholder: inputPlaceholder,\n    render: function render(ref, props) {\n      return /*#__PURE__*/React.createElement(\"input\", _extends({\n        ref: mergeRefs(inputRef, ref)\n      }, props));\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix(hasValue ? 'value' : 'placeholder'),\n    \"aria-placeholder\": typeof children === 'string' ? children : null\n  }, children), cleanable && /*#__PURE__*/React.createElement(CloseButton, {\n    className: prefix(_templateObject()),\n    tabIndex: -1,\n    onClick: handleClean\n  }), caret && /*#__PURE__*/React.createElement(Caret, {\n    className: prefix(_templateObject2())\n  }));\n});\nPickerToggle.displayName = 'PickerToggle';\nPickerToggle.defaultProps = defaultProps;\nPickerToggle.propTypes = {\n  classPrefix: PropTypes.string,\n  hasValue: PropTypes.bool,\n  cleanable: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  caret: PropTypes.bool,\n  as: PropTypes.elementType,\n  onClean: PropTypes.func,\n  active: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  disabled: PropTypes.bool,\n  plaintext: PropTypes.bool\n};\nexport default PickerToggle;"]},"metadata":{},"sourceType":"module"}