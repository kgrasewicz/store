{"ast":null,"code":"// Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n// use this file except in compliance with the License. You may obtain a copy of\n// the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations under\n// the License.\nconst {\n  URL\n} = require('url');\n\nconst assert = require('assert');\n\nconst querystring = require('qs');\n\nconst axios = require('axios').default;\n\nconst axiosCookieJarSupport = require('axios-cookiejar-support').default;\n\nconst tough = require('tough-cookie');\n\naxiosCookieJarSupport(axios);\nconst cookieJar = new tough.CookieJar();\n\nconst stream = require('stream');\n\nconst http = require('http');\n\nconst https = require('https');\n\nconst pkg = require('../package.json');\n\nconst AGENT_DEFAULTS = {\n  keepAlive: true,\n  maxSockets: 50,\n  keepAliveMsecs: 30000\n};\nconst SCRUBBED_STR = 'XXXXXX';\nconst defaultHttpAgent = new http.Agent(AGENT_DEFAULTS);\nconst defaultHttpsAgent = new https.Agent(AGENT_DEFAULTS);\n\nconst ChangesReader = require('./changesreader.js');\n\nfunction isEmpty(val) {\n  return val == null || !(Object.keys(val) || val).length;\n}\n\nfunction getCallback(opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  return {\n    opts,\n    callback\n  };\n} // feed this any number of arguements, it will return true if\n// any of them are missing (falsey)\n\n\nfunction missing(...params) {\n  return params.some(param => !param);\n} // calls the supplied callback or if not supplied, returns a rejected promise\n\n\nfunction callbackOrRejectError(callback, error = new Error('Invalid parameters')) {\n  if (callback) {\n    return callback(error, null);\n  } else {\n    return Promise.reject(error);\n  }\n}\n\nmodule.exports = exports = function dbScope(cfg) {\n  let serverScope = {};\n\n  if (typeof cfg === 'string') {\n    cfg = {\n      url: cfg\n    };\n  }\n\n  assert.strictEqual(typeof cfg, 'object', 'You must specify the endpoint url when invoking this module');\n  assert.ok(/^https?:/.test(cfg.url), 'url is not valid');\n  cfg = Object.assign({}, cfg);\n  serverScope.config = cfg;\n  cfg.requestDefaults = cfg.requestDefaults || {};\n\n  const dummyLogger = () => {};\n\n  const log = typeof cfg.log === 'function' ? cfg.log : dummyLogger;\n  const parseUrl = 'parseUrl' in cfg ? cfg.parseUrl : true;\n\n  function maybeExtractDatabaseComponent() {\n    if (!parseUrl) {\n      return;\n    }\n\n    const path = new URL(cfg.url);\n    const pathArray = path.pathname.split('/').filter(function (e) {\n      return e;\n    });\n    const db = pathArray.pop();\n    const rootPath = path.pathname.replace(/\\/?$/, '/..');\n\n    if (db) {\n      cfg.url = urlResolveFix(cfg.url, rootPath).replace(/\\/?$/, '');\n      return db;\n    }\n  }\n\n  function scrubURL(str) {\n    if (str) {\n      str = str.replace(/\\/\\/(.*)@/, `//${SCRUBBED_STR}:${SCRUBBED_STR}@`);\n    }\n\n    return str;\n  }\n\n  const responseHandler = function (response, req, opts, resolve, reject, callback) {\n    const statusCode = response.status || response.response && response.response.status || 500;\n\n    if (response.isAxiosError && response.response) {\n      response = response.response;\n    }\n\n    let body = response.data;\n    response.statusCode = statusCode; // let parsed\n\n    const responseHeaders = Object.assign({\n      uri: req.url,\n      statusCode: statusCode\n    }, response.headers);\n\n    if (!response.status) {\n      log({\n        err: 'socket',\n        body: body,\n        headers: responseHeaders\n      });\n\n      if (reject) {\n        reject(new Error('error happened in your connection'));\n      }\n\n      if (callback) {\n        const returnError = {\n          message: 'error happened in your connection',\n          scope: 'socket',\n          errid: 'request'\n        };\n        callback(returnError);\n      }\n\n      return;\n    }\n\n    delete responseHeaders.server;\n    delete responseHeaders['content-length'];\n    /* if (opts.dontParse) {\n      parsed = body\n    } else {\n      try { parsed = JSON.parse(body) } catch (err) { parsed = body }\n    } */\n\n    if (statusCode >= 200 && statusCode < 400) {\n      log({\n        err: null,\n        body: body,\n        headers: responseHeaders\n      });\n\n      if (resolve) {\n        resolve(body);\n      }\n\n      if (callback) {\n        callback(null, body, responseHeaders);\n      }\n\n      return;\n    } // cloudant stacktrace\n\n\n    if (typeof body === 'string') {\n      body = {\n        message: body\n      };\n    }\n\n    if (!body.message && (body.reason || body.error)) {\n      body.message = body.reason || body.error;\n    } // fix cloudant issues where they give an erlang stacktrace as js\n\n\n    delete body.stack; // scrub credentials\n\n    req.url = scrubURL(req.url);\n    responseHeaders.uri = scrubURL(responseHeaders.uri);\n\n    if (req.headers.cookie) {\n      req.headers.cookie = 'XXXXXXX';\n    }\n\n    log({\n      err: 'couch',\n      body: body,\n      headers: responseHeaders\n    });\n    const message = body.message || 'couch returned ' + statusCode;\n    const errors = new Error(message);\n    errors.scope = 'couch';\n    errors.statusCode = statusCode;\n    errors.request = req;\n    errors.headers = responseHeaders;\n    errors.errid = 'non_200';\n    errors.name = 'Error';\n    errors.description = message; // add any attributes from the HTTP response into the\n    // Error object (except message, which would overwrite\n    // the text message of the Error)\n\n    delete body.message;\n    Object.assign(errors, body);\n\n    if (reject) {\n      reject(errors);\n    }\n\n    if (callback) {\n      callback(errors);\n    }\n  };\n\n  const streamResponseHandler = function (response, req, stream) {\n    const statusCode = response.status || response.response && response.response.status || 500;\n\n    if (response.isAxiosError && response.response) {\n      response = response.response;\n    }\n\n    const message = response.statusText;\n    const responseHeaders = Object.assign({\n      uri: req.url,\n      statusCode: statusCode\n    }, response.headers);\n    const error = new Error(message);\n    error.scope = 'couch';\n    error.statusCode = statusCode;\n    error.request = req;\n    error.headers = responseHeaders;\n    error.errid = 'non_200';\n    error.name = 'Error';\n    error.description = message;\n    error.reason = message;\n    log({\n      err: 'couch',\n      body: message,\n      headers: responseHeaders\n    });\n    stream.emit('error', error);\n  };\n\n  function relax(opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {\n        path: ''\n      };\n    }\n\n    if (typeof opts === 'string') {\n      opts = {\n        path: opts\n      };\n    }\n\n    if (!opts) {\n      opts = {\n        path: ''\n      };\n      callback = null;\n    }\n\n    const qs = Object.assign({}, opts.qs);\n    const headers = {\n      'content-type': 'application/json',\n      accept: 'application/json',\n      'user-agent': `${pkg.name}/${pkg.version} (Node.js ${process.version})`,\n      'Accept-Encoding': 'deflate, gzip'\n    };\n    const req = Object.assign({\n      method: opts.method || 'GET',\n      headers: headers,\n      uri: cfg.url\n    }, cfg.requestDefaults); // https://github.com/mikeal/request#requestjar\n\n    const isJar = opts.jar || cfg.jar || cfg.requestDefaults && cfg.requestDefaults.jar;\n\n    if (isJar) {\n      req.jar = cookieJar;\n      req.withCredentials = true;\n    } // http://wiki.apache.org/couchdb/HTTP_database_API#Naming_and_Addressing\n\n\n    if (opts.db) {\n      req.uri = urlResolveFix(req.uri, encodeURIComponent(opts.db));\n    }\n\n    if (opts.multipart) {\n      req.multipart = opts.multipart;\n    }\n\n    req.headers = Object.assign(req.headers, opts.headers, cfg.defaultHeaders);\n\n    if (opts.path) {\n      req.uri += '/' + opts.path;\n    } else if (opts.doc) {\n      if (!/^_design|_local/.test(opts.doc)) {\n        // http://wiki.apache.org/couchdb/HTTP_Document_API#Naming.2FAddressing\n        req.uri += '/' + encodeURIComponent(opts.doc);\n      } else {\n        // http://wiki.apache.org/couchdb/HTTP_Document_API#Document_IDs\n        req.uri += '/' + opts.doc;\n      } // http://wiki.apache.org/couchdb/HTTP_Document_API#Attachments\n\n\n      if (opts.att) {\n        req.uri += '/' + opts.att;\n      }\n    } // prevent bugs where people set encoding when piping\n\n\n    if (opts.encoding !== undefined) {\n      req.encoding = opts.encoding;\n      delete req.headers['content-type'];\n      delete req.headers.accept;\n    }\n\n    if (opts.contentType) {\n      req.headers['content-type'] = opts.contentType;\n      delete req.headers.accept;\n    }\n\n    if (opts.accept) {\n      req.headers.accept = opts.accept;\n    } // http://guide.couchdb.org/draft/security.html#cookies\n\n\n    if (cfg.cookie) {\n      req.headers['X-CouchDB-WWW-Authenticate'] = 'Cookie';\n      req.headers.cookie = cfg.cookie;\n    } // http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n\n\n    if (typeof opts.qs === 'object' && !isEmpty(opts.qs)) {\n      ['startkey', 'endkey', 'key', 'keys', 'start_key', 'end_key'].forEach(function (key) {\n        if (key in opts.qs) {\n          qs[key] = JSON.stringify(opts.qs[key]);\n        }\n      });\n      req.qs = qs;\n    }\n\n    if (opts.body) {\n      if (Buffer.isBuffer(opts.body) || opts.dontStringify) {\n        req.body = opts.body;\n      } else {\n        req.body = JSON.stringify(opts.body, function (key, value) {\n          // don't encode functions\n          if (typeof value === 'function') {\n            return value.toString();\n          } else {\n            return value;\n          }\n        });\n      }\n    }\n\n    if (opts.form) {\n      req.headers['content-type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n      req.body = querystring.stringify(opts.form).toString('utf8');\n    } // ask request to render query string arrays as repeated values e.g.\n    // ?drilldown=[\"author\",\"Dickens\"]&drilldown=[\"publisher\",\"Penguin\"]\n\n\n    req.qsStringifyOptions = {\n      arrayFormat: 'repeat'\n    };\n    cfg.cookies = cookieJar.getCookiesSync(cfg.url); // This where the HTTP request is made.\n    // Nano used to use the now-deprecated \"request\" library but now we're going to\n    // use axios, so let's modify the \"req\" object to suit axios\n\n    req.url = req.uri;\n    delete req.uri;\n    req.method = req.method.toLowerCase();\n    req.params = req.qs;\n    delete req.qs;\n\n    req.paramsSerializer = params => {\n      return querystring.stringify(params, {\n        arrayFormat: 'brackets'\n      });\n    };\n\n    req.data = req.body;\n    delete req.body;\n    req.maxRedirects = 0;\n\n    if (opts.stream) {\n      req.responseType = 'stream';\n    } else if (opts.dontParse) {\n      req.responseType = 'arraybuffer';\n    } // scrub and log\n\n\n    const scrubbedReq = JSON.parse(JSON.stringify(req));\n    scrubbedReq.url = scrubURL(scrubbedReq.url);\n\n    if (scrubbedReq.auth) {\n      scrubbedReq.auth.username = SCRUBBED_STR;\n      scrubbedReq.auth.password = SCRUBBED_STR;\n    }\n\n    log(scrubbedReq); // add http agents\n\n    req.httpAgent = cfg.requestDefaults.agent || defaultHttpAgent;\n    req.httpsAgent = cfg.requestDefaults.agent || defaultHttpsAgent; // actually do the HTTP request\n\n    if (opts.stream) {\n      // return the Request object for streaming\n      const outStream = new stream.PassThrough();\n      axios(req).then(response => {\n        response.data.pipe(outStream);\n      }).catch(e => {\n        streamResponseHandler(e, req, outStream);\n      });\n      return outStream;\n    } else {\n      if (typeof callback === 'function') {\n        axios(req).then(response => {\n          responseHandler(response, req, opts, null, null, callback);\n        }).catch(e => {\n          responseHandler(e, req, opts, null, null, callback);\n        });\n      } else {\n        return new Promise((resolve, reject) => {\n          axios(req).then(response => {\n            responseHandler(response, req, opts, resolve, reject);\n          }).catch(e => {\n            responseHandler(e, req, opts, resolve, reject);\n          });\n        });\n      }\n    }\n  } // http://docs.couchdb.org/en/latest/api/server/authn.html#cookie-authentication\n\n\n  function auth(username, password, callback) {\n    return relax({\n      method: 'POST',\n      db: '_session',\n      form: {\n        name: username,\n        password: password\n      }\n    }, callback);\n  } // http://docs.couchdb.org/en/latest/api/server/authn.html#post--_session\n\n\n  function session(callback) {\n    return relax({\n      db: '_session'\n    }, callback);\n  } // https://docs.couchdb.org/en/latest/api/server/common.html#api-server-root\n\n\n  function info(callback) {\n    return relax({\n      path: ''\n    }, callback);\n  } // http://docs.couchdb.org/en/latest/api/server/common.html#get--_db_updates\n\n\n  function updates(qs0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(qs0, callback0);\n    return relax({\n      db: '_db_updates',\n      qs: opts\n    }, callback);\n  } // http://docs.couchdb.org/en/latest/api/database/common.html#put--db\n\n\n  function createDb(dbName, qs0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(qs0, callback0);\n\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback);\n    }\n\n    return relax({\n      db: dbName,\n      method: 'PUT',\n      qs: opts\n    }, callback);\n  } // http://docs.couchdb.org/en/latest/api/database/common.html#delete--db\n\n\n  function destroyDb(dbName, callback) {\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback);\n    }\n\n    return relax({\n      db: dbName,\n      method: 'DELETE'\n    }, callback);\n  } // http://docs.couchdb.org/en/latest/api/database/common.html#get--db\n\n\n  function getDb(dbName, callback) {\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback);\n    }\n\n    return relax({\n      db: dbName\n    }, callback);\n  } // http://docs.couchdb.org/en/latest/api/server/common.html#get--_all_dbs\n\n\n  function listDbs(callback) {\n    return relax({\n      db: '_all_dbs'\n    }, callback);\n  } // http://docs.couchdb.org/en/latest/api/server/common.html#get--_all_dbs\n\n\n  function listDbsAsStream() {\n    return relax({\n      db: '_all_dbs',\n      stream: true\n    });\n  } // http://docs.couchdb.org/en/latest/api/database/compact.html#post--db-_compact\n\n\n  function compactDb(dbName, ddoc, callback) {\n    if (typeof ddoc === 'function') {\n      callback = ddoc;\n      ddoc = null;\n    }\n\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback);\n    }\n\n    return relax({\n      db: dbName,\n      doc: '_compact',\n      att: ddoc,\n      method: 'POST'\n    }, callback);\n  } // http://docs.couchdb.org/en/latest/api/database/changes.html#get--db-_changes\n\n\n  function changesDb(dbName, qs0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(qs0, callback0);\n\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback);\n    }\n\n    return relax({\n      db: dbName,\n      path: '_changes',\n      qs: opts\n    }, callback);\n  }\n\n  function changesDbAsStream(dbName, opts) {\n    return relax({\n      db: dbName,\n      path: '_changes',\n      stream: true,\n      qs: opts\n    });\n  }\n\n  function _serializeAsUrl(db) {\n    if (typeof db === 'object' && db.config && db.config.url && db.config.db) {\n      return urlResolveFix(db.config.url, encodeURIComponent(db.config.db));\n    } else {\n      try {\n        // if it parses, return it\n        const parsed = new URL(db);\n        return parsed.toString();\n      } catch (e) {\n        // otherwise treat it as a database name\n        return urlResolveFix(cfg.url, encodeURIComponent(db));\n      }\n    }\n  } // http://docs.couchdb.org/en/latest/api/server/common.html#post--_replicate\n\n\n  function replicateDb(source, target, opts0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(opts0, callback0);\n\n    if (missing(source, target)) {\n      return callbackOrRejectError(callback);\n    } // _replicate\n\n\n    opts.source = _serializeAsUrl(source);\n    opts.target = _serializeAsUrl(target);\n    return relax({\n      db: '_replicate',\n      body: opts,\n      method: 'POST'\n    }, callback);\n  } // http://docs.couchdb.org/en/latest/api/server/common.html#uuids\n\n\n  function uuids(count, callback) {\n    if (typeof count === 'function') {\n      callback = count;\n      count = 1;\n    }\n\n    count = count || 1;\n    return relax({\n      method: 'GET',\n      path: '_uuids',\n      qs: {\n        count: count\n      }\n    }, callback);\n  } // http://guide.couchdb.org/draft/replication.html\n\n\n  function enableReplication(source, target, opts0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(opts0, callback0);\n\n    if (missing(source, target)) {\n      return callbackOrRejectError(callback);\n    } // _replicator\n\n\n    opts.source = _serializeAsUrl(source);\n    opts.target = _serializeAsUrl(target);\n    return relax({\n      db: '_replicator',\n      body: opts,\n      method: 'POST'\n    }, callback);\n  } // http://guide.couchdb.org/draft/replication.html\n\n\n  function queryReplication(id, opts0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(opts0, callback0);\n\n    if (missing(id)) {\n      return callbackOrRejectError(callback);\n    }\n\n    return relax({\n      db: '_replicator',\n      method: 'GET',\n      path: id,\n      qs: opts\n    }, callback);\n  } // http://guide.couchdb.org/draft/replication.html\n\n\n  function disableReplication(id, rev, opts0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(opts0, callback0);\n\n    if (missing(id, rev)) {\n      return callbackOrRejectError(callback);\n    }\n\n    const req = {\n      db: '_replicator',\n      method: 'DELETE',\n      path: id,\n      qs: Object.assign(opts, {\n        rev: rev\n      })\n    };\n    return relax(req, callback);\n  }\n\n  function docModule(dbName) {\n    let docScope = {};\n    dbName = decodeURIComponent(dbName); // http://docs.couchdb.org/en/latest/api/document/common.html#put--db-docid\n    // http://docs.couchdb.org/en/latest/api/database/common.html#post--db\n\n    function insertDoc(doc, qs0, callback0) {\n      const req = {\n        db: dbName,\n        body: doc,\n        method: 'POST'\n      };\n      let {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n\n      if (typeof opts === 'string') {\n        opts = {\n          docName: opts\n        };\n      }\n\n      if (opts) {\n        if (opts.docName) {\n          req.doc = opts.docName;\n          req.method = 'PUT';\n          delete opts.docName;\n        }\n\n        req.qs = opts;\n      }\n\n      return relax(req, callback);\n    } // http://docs.couchdb.org/en/latest/api/document/common.html#delete--db-docid\n\n\n    function destroyDoc(docName, rev, callback) {\n      if (missing(docName)) {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        doc: docName,\n        method: 'DELETE',\n        qs: {\n          rev: rev\n        }\n      }, callback);\n    } // http://docs.couchdb.org/en/latest/api/document/common.html#get--db-docid\n\n\n    function getDoc(docName, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n\n      if (missing(docName)) {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        doc: docName,\n        qs: opts\n      }, callback);\n    } // http://docs.couchdb.org/en/latest/api/document/common.html#head--db-docid\n\n\n    function headDoc(docName, callback) {\n      if (missing(docName)) {\n        return callbackOrRejectError(callback);\n      }\n\n      if (callback) {\n        relax({\n          db: dbName,\n          doc: docName,\n          method: 'HEAD',\n          qs: {}\n        }, callback);\n      } else {\n        // this function doesn't pass on the Promise from relax because it needs\n        // to return the headers when resolving the Promise\n        return new Promise(function (resolve, reject) {\n          relax({\n            db: dbName,\n            doc: docName,\n            method: 'HEAD',\n            qs: {}\n          }, function (err, body, headers) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(headers);\n            }\n          });\n        });\n      }\n    } // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#get--db-_all_docs\n\n\n    function listDoc(qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      return relax({\n        db: dbName,\n        path: '_all_docs',\n        qs: opts\n      }, callback);\n    } // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#get--db-_all_docs\n\n\n    function listDocAsStream(opts) {\n      return relax({\n        db: dbName,\n        path: '_all_docs',\n        qs: opts,\n        stream: true\n      });\n    } // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#post--db-_all_docs\n\n\n    function fetchDocs(docNames, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      opts.include_docs = true;\n\n      if (missing(docNames) || typeof docNames !== 'object' || !docNames.keys || !Array.isArray(docNames.keys) || docNames.keys.length === 0) {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        path: '_all_docs',\n        method: 'POST',\n        qs: opts,\n        body: docNames\n      }, callback);\n    }\n\n    function fetchRevs(docNames, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n\n      if (missing(docNames) || typeof docNames !== 'object' || !docNames.keys || !Array.isArray(docNames.keys) || docNames.keys.length === 0) {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        path: '_all_docs',\n        method: 'POST',\n        qs: opts,\n        body: docNames\n      }, callback);\n    }\n\n    function view(ddoc, viewName, meta, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n\n      if (missing(ddoc, viewName) && !meta.viewPath) {\n        return callbackOrRejectError(callback);\n      }\n\n      if (typeof meta.stream !== 'boolean') {\n        meta.stream = false;\n      } // prevent mutation of the client qs object by using a clone\n\n\n      const qs1 = Object.assign({}, opts);\n      const viewPath = meta.viewPath || '_design/' + ddoc + '/_' + meta.type + '/' + viewName;\n\n      if (meta.type === 'search') {\n        return relax({\n          db: dbName,\n          path: viewPath,\n          method: 'POST',\n          body: qs1,\n          stream: meta.stream\n        }, callback);\n      } else if (qs1 && qs1.keys) {\n        const body = {\n          keys: qs1.keys\n        };\n        delete qs1.keys;\n        return relax({\n          db: dbName,\n          path: viewPath,\n          method: 'POST',\n          qs: qs1,\n          body: body,\n          stream: meta.stream\n        }, callback);\n      } else if (qs1 && qs1.queries) {\n        const body = {\n          queries: qs1.queries\n        };\n        delete qs1.queries;\n        return relax({\n          db: dbName,\n          path: viewPath,\n          method: 'POST',\n          qs: qs1,\n          body: body\n        }, callback);\n      } else {\n        const req = {\n          db: dbName,\n          method: meta.method || 'GET',\n          path: viewPath,\n          qs: qs1,\n          stream: meta.stream\n        };\n\n        if (meta.body) {\n          req.body = meta.body;\n        }\n\n        return relax(req, callback);\n      }\n    } // http://docs.couchdb.org/en/latest/api/ddoc/views.html#post--db-_design-ddoc-_view-view\n\n\n    function viewDocs(ddoc, viewName, qs, callback) {\n      return view(ddoc, viewName, {\n        type: 'view'\n      }, qs, callback);\n    } // http://docs.couchdb.org/en/latest/api/ddoc/views.html#post--db-_design-ddoc-_view-view\n\n\n    function viewDocsAsStream(ddoc, viewName, qs) {\n      return view(ddoc, viewName, {\n        type: 'view',\n        stream: true\n      }, qs);\n    } // cloudant\n\n\n    function viewSearch(ddoc, viewName, qs, callback) {\n      return view(ddoc, viewName, {\n        type: 'search'\n      }, qs, callback);\n    } // cloudant\n\n\n    function viewSearchAsStream(ddoc, viewName, qs) {\n      return view(ddoc, viewName, {\n        type: 'search',\n        stream: true\n      }, qs);\n    } // http://docs.couchdb.org/en/latest/api/ddoc/render.html#get--db-_design-ddoc-_show-func\n\n\n    function showDoc(ddoc, viewName, docName, qs, callback) {\n      if (missing(ddoc, viewName, docName)) {\n        return callbackOrRejectError(callback);\n      }\n\n      return view(ddoc, viewName + '/' + docName, {\n        type: 'show'\n      }, qs, callback);\n    } // http://docs.couchdb.org/en/latest/api/ddoc/render.html#put--db-_design-ddoc-_update-func-docid\n\n\n    function updateWithHandler(ddoc, viewName, docName, body, callback) {\n      if (typeof body === 'function') {\n        callback = body;\n        body = undefined;\n      }\n\n      if (missing(ddoc, viewName, docName)) {\n        return callbackOrRejectError(callback);\n      }\n\n      return view(ddoc, viewName + '/' + encodeURIComponent(docName), {\n        type: 'update',\n        method: 'PUT',\n        body: body\n      }, callback);\n    }\n\n    function viewWithList(ddoc, viewName, listName, qs, callback) {\n      return view(ddoc, listName + '/' + viewName, {\n        type: 'list'\n      }, qs, callback);\n    }\n\n    function viewWithListAsStream(ddoc, viewName, listName, qs, callback) {\n      return view(ddoc, listName + '/' + viewName, {\n        type: 'list',\n        stream: true\n      }, qs, callback);\n    } // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#post--db-_bulksDoc\n\n\n    function bulksDoc(docs, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      return relax({\n        db: dbName,\n        path: '_bulk_docs',\n        body: docs,\n        method: 'POST',\n        qs: opts\n      }, callback);\n    } // http://docs.couchdb.org/en/latest/api/document/common.html#creating-multiple-attachments\n\n\n    function insertMultipart(doc, attachments, qs, callback) {\n      if (typeof qs === 'string') {\n        qs = {\n          docName: qs\n        };\n      }\n\n      qs = qs || {};\n      const docName = qs.docName;\n      delete qs.docName;\n\n      if (missing(doc, attachments, docName)) {\n        return callbackOrRejectError(callback);\n      }\n\n      doc = Object.assign({\n        _attachments: {}\n      }, doc);\n      const multipart = [];\n      attachments.forEach(function (att) {\n        doc._attachments[att.name] = {\n          follows: true,\n          length: Buffer.isBuffer(att.data) ? att.data.length : Buffer.byteLength(att.data),\n\n          /* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\n          content_type: att.content_type\n        };\n        multipart.push({\n          body: att.data\n        });\n      });\n      multipart.unshift({\n        'content-type': 'application/json',\n        body: JSON.stringify(doc)\n      });\n      return relax({\n        db: dbName,\n        method: 'PUT',\n        contentType: 'multipart/related',\n        doc: docName,\n        qs: qs,\n        multipart: multipart\n      }, callback);\n    }\n\n    function getMultipart(docName, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      opts.attachments = true;\n\n      if (missing(docName)) {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        doc: docName,\n        encoding: null,\n        accept: 'multipart/related',\n        qs: opts\n      }, callback);\n    }\n\n    function insertAtt(docName, attName, att, contentType, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n\n      if (missing(docName, attName, att, contentType)) {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        att: attName,\n        method: 'PUT',\n        contentType: contentType,\n        doc: docName,\n        qs: opts,\n        body: att,\n        dontStringify: true\n      }, callback);\n    }\n\n    function getAtt(docName, attName, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n\n      if (missing(docName, attName)) {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        att: attName,\n        doc: docName,\n        qs: opts,\n        encoding: null,\n        dontParse: true\n      }, callback);\n    }\n\n    function getAttAsStream(docName, attName, opts) {\n      return relax({\n        db: dbName,\n        att: attName,\n        doc: docName,\n        qs: opts,\n        stream: true,\n        encoding: null,\n        dontParse: true\n      });\n    }\n\n    function destroyAtt(docName, attName, qs, callback) {\n      if (missing(docName, attName)) {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        att: attName,\n        method: 'DELETE',\n        doc: docName,\n        qs: qs\n      }, callback);\n    }\n\n    function find(query, callback) {\n      if (missing(query) || typeof query !== 'object') {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        path: '_find',\n        method: 'POST',\n        body: query\n      }, callback);\n    }\n\n    function findAsStream(query) {\n      return relax({\n        db: dbName,\n        path: '_find',\n        method: 'POST',\n        body: query,\n        stream: true\n      });\n    }\n\n    function createIndex(indexDef, callback) {\n      if (missing(indexDef) || typeof indexDef !== 'object') {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        path: '_index',\n        method: 'POST',\n        body: indexDef\n      }, callback);\n    }\n\n    function partitionInfo(partitionKey, callback) {\n      if (missing(partitionKey)) {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        path: '_partition/' + partitionKey\n      }, callback);\n    }\n\n    function partitionedList(partitionKey, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n\n      if (missing(partitionKey)) {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        path: '_partition/' + partitionKey + '/_all_docs',\n        qs: opts\n      }, callback);\n    }\n\n    function partitionedListAsStream(partitionKey, qs) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partitionKey + '/_all_docs',\n        qs: qs,\n        stream: true\n      });\n    }\n\n    function partitionedFind(partition, query, callback) {\n      if (missing(partition, query) || typeof query !== 'object') {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_find',\n        method: 'POST',\n        body: query\n      }, callback);\n    }\n\n    function partitionedFindAsStream(partition, query) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_find',\n        method: 'POST',\n        body: query,\n        stream: true\n      });\n    }\n\n    function partitionedSearch(partition, ddoc, searchName, opts, callback) {\n      if (missing(partition, ddoc, searchName, opts) || typeof opts !== 'object') {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_search/' + searchName,\n        qs: opts\n      }, callback);\n    }\n\n    function partitionedSearchAsStream(partition, ddoc, searchName, opts) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_search/' + searchName,\n        qs: opts,\n        stream: true\n      });\n    }\n\n    function partitionedView(partition, ddoc, viewName, opts, callback) {\n      if (missing(partition, ddoc, viewName)) {\n        return callbackOrRejectError(callback);\n      }\n\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_view/' + viewName,\n        qs: opts\n      }, callback);\n    }\n\n    function partitionedViewAsStream(partition, ddoc, viewName, opts) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_view/' + viewName,\n        qs: opts,\n        stream: true\n      });\n    } // db level exports\n\n\n    docScope = {\n      info: function (cb) {\n        return getDb(dbName, cb);\n      },\n      replicate: function (target, opts, cb) {\n        return replicateDb(dbName, target, opts, cb);\n      },\n      compact: function (cb) {\n        return compactDb(dbName, cb);\n      },\n      changes: function (qs, cb) {\n        return changesDb(dbName, qs, cb);\n      },\n      changesAsStream: function (qs) {\n        return changesDbAsStream(dbName, qs);\n      },\n      changesReader: new ChangesReader(dbName, relax),\n      auth: auth,\n      session: session,\n      insert: insertDoc,\n      get: getDoc,\n      head: headDoc,\n      destroy: destroyDoc,\n      bulk: bulksDoc,\n      list: listDoc,\n      listAsStream: listDocAsStream,\n      fetch: fetchDocs,\n      fetchRevs: fetchRevs,\n      config: {\n        url: cfg.url,\n        db: dbName\n      },\n      multipart: {\n        insert: insertMultipart,\n        get: getMultipart\n      },\n      attachment: {\n        insert: insertAtt,\n        get: getAtt,\n        getAsStream: getAttAsStream,\n        destroy: destroyAtt\n      },\n      show: showDoc,\n      atomic: updateWithHandler,\n      updateWithHandler: updateWithHandler,\n      baseView: view,\n      search: viewSearch,\n      searchAsStream: viewSearchAsStream,\n      view: viewDocs,\n      viewAsStream: viewDocsAsStream,\n      find: find,\n      findAsStream: findAsStream,\n      createIndex: createIndex,\n      viewWithList: viewWithList,\n      viewWithListAsStream: viewWithListAsStream,\n      server: serverScope,\n      replication: {\n        enable: function (target, opts, cb) {\n          return enableReplication(dbName, target, opts, cb);\n        },\n        disable: function (id, revision, opts, cb) {\n          return disableReplication(id, revision, opts, cb);\n        },\n        query: function (id, opts, cb) {\n          return queryReplication(id, opts, cb);\n        }\n      },\n      partitionInfo: partitionInfo,\n      partitionedList: partitionedList,\n      partitionedListAsStream: partitionedListAsStream,\n      partitionedFind: partitionedFind,\n      partitionedFindAsStream: partitionedFindAsStream,\n      partitionedSearch: partitionedSearch,\n      partitionedSearchAsStream: partitionedSearchAsStream,\n      partitionedView: partitionedView,\n      partitionedViewAsStream: partitionedViewAsStream\n    };\n\n    docScope.view.compact = function (ddoc, cb) {\n      return compactDb(dbName, ddoc, cb);\n    };\n\n    return docScope;\n  } // server level exports\n\n\n  serverScope = Object.assign(serverScope, {\n    db: {\n      create: createDb,\n      get: getDb,\n      destroy: destroyDb,\n      list: listDbs,\n      listAsStream: listDbsAsStream,\n      use: docModule,\n      scope: docModule,\n      compact: compactDb,\n      replicate: replicateDb,\n      replication: {\n        enable: enableReplication,\n        disable: disableReplication,\n        query: queryReplication\n      },\n      changes: changesDb,\n      updates: updates\n    },\n    use: docModule,\n    scope: docModule,\n    request: relax,\n    relax: relax,\n    dinosaur: relax,\n    auth: auth,\n    session: session,\n    updates: updates,\n    uuids: uuids,\n    info: info\n  });\n  const db = maybeExtractDatabaseComponent();\n  return db ? docModule(db) : serverScope;\n};\n/*\n * and now an ascii dinosaur\n *              _\n *            / _) ROAR! i'm a vegan!\n *     .-^^^-/ /\n *  __/       /\n * /__.|_|-|_|\n *\n * thanks for visiting! come again!\n */\n\n\nfunction urlResolveFix(couchUrl, dbName) {\n  if (/[^/]$/.test(couchUrl)) {\n    couchUrl += '/';\n  }\n\n  return new URL(dbName, couchUrl).toString();\n}","map":{"version":3,"sources":["C:/Programowanie/store/node_modules/nano/lib/nano.js"],"names":["URL","require","assert","querystring","axios","default","axiosCookieJarSupport","tough","cookieJar","CookieJar","stream","http","https","pkg","AGENT_DEFAULTS","keepAlive","maxSockets","keepAliveMsecs","SCRUBBED_STR","defaultHttpAgent","Agent","defaultHttpsAgent","ChangesReader","isEmpty","val","Object","keys","length","getCallback","opts","callback","missing","params","some","param","callbackOrRejectError","error","Error","Promise","reject","module","exports","dbScope","cfg","serverScope","url","strictEqual","ok","test","assign","config","requestDefaults","dummyLogger","log","parseUrl","maybeExtractDatabaseComponent","path","pathArray","pathname","split","filter","e","db","pop","rootPath","replace","urlResolveFix","scrubURL","str","responseHandler","response","req","resolve","statusCode","status","isAxiosError","body","data","responseHeaders","uri","headers","err","returnError","message","scope","errid","server","reason","stack","cookie","errors","request","name","description","streamResponseHandler","statusText","emit","relax","qs","accept","version","process","method","isJar","jar","withCredentials","encodeURIComponent","multipart","defaultHeaders","doc","att","encoding","undefined","contentType","forEach","key","JSON","stringify","Buffer","isBuffer","dontStringify","value","toString","form","qsStringifyOptions","arrayFormat","cookies","getCookiesSync","toLowerCase","paramsSerializer","maxRedirects","responseType","dontParse","scrubbedReq","parse","auth","username","password","httpAgent","agent","httpsAgent","outStream","PassThrough","then","pipe","catch","session","info","updates","qs0","callback0","createDb","dbName","destroyDb","getDb","listDbs","listDbsAsStream","compactDb","ddoc","changesDb","changesDbAsStream","_serializeAsUrl","parsed","replicateDb","source","target","opts0","uuids","count","enableReplication","queryReplication","id","disableReplication","rev","docModule","docScope","decodeURIComponent","insertDoc","docName","destroyDoc","getDoc","headDoc","listDoc","listDocAsStream","fetchDocs","docNames","include_docs","Array","isArray","fetchRevs","view","viewName","meta","viewPath","qs1","type","queries","viewDocs","viewDocsAsStream","viewSearch","viewSearchAsStream","showDoc","updateWithHandler","viewWithList","listName","viewWithListAsStream","bulksDoc","docs","insertMultipart","attachments","_attachments","follows","byteLength","content_type","push","unshift","getMultipart","insertAtt","attName","getAtt","getAttAsStream","destroyAtt","find","query","findAsStream","createIndex","indexDef","partitionInfo","partitionKey","partitionedList","partitionedListAsStream","partitionedFind","partition","partitionedFindAsStream","partitionedSearch","searchName","partitionedSearchAsStream","partitionedView","partitionedViewAsStream","cb","replicate","compact","changes","changesAsStream","changesReader","insert","get","head","destroy","bulk","list","listAsStream","fetch","attachment","getAsStream","show","atomic","baseView","search","searchAsStream","viewAsStream","replication","enable","disable","revision","create","use","dinosaur","couchUrl"],"mappings":"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","sourcesContent":["// Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n// use this file except in compliance with the License. You may obtain a copy of\n// the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations under\n// the License.\n\nconst { URL } = require('url')\nconst assert = require('assert')\nconst querystring = require('qs')\nconst axios = require('axios').default\nconst axiosCookieJarSupport = require('axios-cookiejar-support').default\nconst tough = require('tough-cookie')\naxiosCookieJarSupport(axios)\nconst cookieJar = new tough.CookieJar()\nconst stream = require('stream')\nconst http = require('http')\nconst https = require('https')\nconst pkg = require('../package.json')\nconst AGENT_DEFAULTS = { keepAlive: true, maxSockets: 50, keepAliveMsecs: 30000 }\nconst SCRUBBED_STR = 'XXXXXX'\nconst defaultHttpAgent = new http.Agent(AGENT_DEFAULTS)\nconst defaultHttpsAgent = new https.Agent(AGENT_DEFAULTS)\nconst ChangesReader = require('./changesreader.js')\n\nfunction isEmpty (val) {\n  return val == null || !(Object.keys(val) || val).length\n}\n\nfunction getCallback (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts\n    opts = {}\n  }\n  opts = opts || {}\n  return {\n    opts,\n    callback\n  }\n}\n\n// feed this any number of arguements, it will return true if\n// any of them are missing (falsey)\nfunction missing (...params) {\n  return params.some(param => !param)\n}\n\n// calls the supplied callback or if not supplied, returns a rejected promise\nfunction callbackOrRejectError (callback, error = new Error('Invalid parameters')) {\n  if (callback) {\n    return callback(error, null)\n  } else {\n    return Promise.reject(error)\n  }\n}\n\nmodule.exports = exports = function dbScope (cfg) {\n  let serverScope = {}\n\n  if (typeof cfg === 'string') {\n    cfg = { url: cfg }\n  }\n\n  assert.strictEqual(typeof cfg, 'object',\n    'You must specify the endpoint url when invoking this module')\n  assert.ok(/^https?:/.test(cfg.url), 'url is not valid')\n\n  cfg = Object.assign({}, cfg)\n\n  serverScope.config = cfg\n  cfg.requestDefaults = cfg.requestDefaults || {}\n\n  const dummyLogger = () => {}\n  const log = typeof cfg.log === 'function' ? cfg.log : dummyLogger\n  const parseUrl = 'parseUrl' in cfg ? cfg.parseUrl : true\n\n  function maybeExtractDatabaseComponent () {\n    if (!parseUrl) {\n      return\n    }\n\n    const path = new URL(cfg.url)\n    const pathArray = path.pathname.split('/').filter(function (e) { return e })\n    const db = pathArray.pop()\n    const rootPath = path.pathname.replace(/\\/?$/, '/..')\n\n    if (db) {\n      cfg.url = urlResolveFix(cfg.url, rootPath).replace(/\\/?$/, '')\n      return db\n    }\n  }\n\n  function scrubURL (str) {\n    if (str) {\n      str = str.replace(/\\/\\/(.*)@/, `//${SCRUBBED_STR}:${SCRUBBED_STR}@`)\n    }\n    return str\n  }\n  const responseHandler = function (response, req, opts, resolve, reject, callback) {\n    const statusCode = response.status || (response.response && response.response.status) || 500\n    if (response.isAxiosError && response.response) {\n      response = response.response\n    }\n    let body = response.data\n    response.statusCode = statusCode\n\n    // let parsed\n    const responseHeaders = Object.assign({\n      uri: req.url,\n      statusCode: statusCode\n    }, response.headers)\n    if (!response.status) {\n      log({ err: 'socket', body: body, headers: responseHeaders })\n      if (reject) {\n        reject(new Error('error happened in your connection'))\n      }\n      if (callback) {\n        const returnError = {\n          message: 'error happened in your connection',\n          scope: 'socket',\n          errid: 'request'\n        }\n        callback(returnError)\n      }\n      return\n    }\n\n    delete responseHeaders.server\n    delete responseHeaders['content-length']\n\n    /* if (opts.dontParse) {\n      parsed = body\n    } else {\n      try { parsed = JSON.parse(body) } catch (err) { parsed = body }\n    } */\n\n    if (statusCode >= 200 && statusCode < 400) {\n      log({ err: null, body: body, headers: responseHeaders })\n      if (resolve) {\n        resolve(body)\n      }\n      if (callback) {\n        callback(null, body, responseHeaders)\n      }\n      return\n    }\n\n    // cloudant stacktrace\n    if (typeof body === 'string') {\n      body = { message: body }\n    }\n\n    if (!body.message && (body.reason || body.error)) {\n      body.message = (body.reason || body.error)\n    }\n\n    // fix cloudant issues where they give an erlang stacktrace as js\n    delete body.stack\n\n    // scrub credentials\n    req.url = scrubURL(req.url)\n    responseHeaders.uri = scrubURL(responseHeaders.uri)\n    if (req.headers.cookie) {\n      req.headers.cookie = 'XXXXXXX'\n    }\n\n    log({ err: 'couch', body: body, headers: responseHeaders })\n\n    const message = body.message || 'couch returned ' + statusCode\n    const errors = new Error(message)\n    errors.scope = 'couch'\n    errors.statusCode = statusCode\n    errors.request = req\n    errors.headers = responseHeaders\n    errors.errid = 'non_200'\n    errors.name = 'Error'\n    errors.description = message\n    // add any attributes from the HTTP response into the\n    // Error object (except message, which would overwrite\n    // the text message of the Error)\n    delete body.message\n    Object.assign(errors, body)\n\n    if (reject) {\n      reject(errors)\n    }\n    if (callback) {\n      callback(errors)\n    }\n  }\n\n  const streamResponseHandler = function (response, req, stream) {\n    const statusCode = response.status || (response.response && response.response.status) || 500\n    if (response.isAxiosError && response.response) {\n      response = response.response\n    }\n    const message = response.statusText\n\n    const responseHeaders = Object.assign({\n      uri: req.url,\n      statusCode: statusCode\n    }, response.headers)\n\n    const error = new Error(message)\n    error.scope = 'couch'\n    error.statusCode = statusCode\n    error.request = req\n    error.headers = responseHeaders\n    error.errid = 'non_200'\n    error.name = 'Error'\n    error.description = message\n    error.reason = message\n\n    log({ err: 'couch', body: message, headers: responseHeaders })\n\n    stream.emit('error', error)\n  }\n\n  function relax (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts\n      opts = { path: '' }\n    }\n\n    if (typeof opts === 'string') {\n      opts = { path: opts }\n    }\n\n    if (!opts) {\n      opts = { path: '' }\n      callback = null\n    }\n\n    const qs = Object.assign({}, opts.qs)\n\n    const headers = {\n      'content-type': 'application/json',\n      accept: 'application/json',\n      'user-agent': `${pkg.name}/${pkg.version} (Node.js ${process.version})`,\n      'Accept-Encoding': 'deflate, gzip'\n    }\n\n    const req = Object.assign({\n      method: (opts.method || 'GET'),\n      headers: headers,\n      uri: cfg.url\n    }, cfg.requestDefaults)\n\n    // https://github.com/mikeal/request#requestjar\n    const isJar = opts.jar || cfg.jar || (cfg.requestDefaults && cfg.requestDefaults.jar)\n\n    if (isJar) {\n      req.jar = cookieJar\n      req.withCredentials = true\n    }\n\n    // http://wiki.apache.org/couchdb/HTTP_database_API#Naming_and_Addressing\n    if (opts.db) {\n      req.uri = urlResolveFix(req.uri, encodeURIComponent(opts.db))\n    }\n\n    if (opts.multipart) {\n      req.multipart = opts.multipart\n    }\n\n    req.headers = Object.assign(req.headers, opts.headers, cfg.defaultHeaders)\n\n    if (opts.path) {\n      req.uri += '/' + opts.path\n    } else if (opts.doc) {\n      if (!/^_design|_local/.test(opts.doc)) {\n        // http://wiki.apache.org/couchdb/HTTP_Document_API#Naming.2FAddressing\n        req.uri += '/' + encodeURIComponent(opts.doc)\n      } else {\n        // http://wiki.apache.org/couchdb/HTTP_Document_API#Document_IDs\n        req.uri += '/' + opts.doc\n      }\n\n      // http://wiki.apache.org/couchdb/HTTP_Document_API#Attachments\n      if (opts.att) {\n        req.uri += '/' + opts.att\n      }\n    }\n\n    // prevent bugs where people set encoding when piping\n    if (opts.encoding !== undefined) {\n      req.encoding = opts.encoding\n      delete req.headers['content-type']\n      delete req.headers.accept\n    }\n\n    if (opts.contentType) {\n      req.headers['content-type'] = opts.contentType\n      delete req.headers.accept\n    }\n\n    if (opts.accept) {\n      req.headers.accept = opts.accept\n    }\n\n    // http://guide.couchdb.org/draft/security.html#cookies\n    if (cfg.cookie) {\n      req.headers['X-CouchDB-WWW-Authenticate'] = 'Cookie'\n      req.headers.cookie = cfg.cookie\n    }\n\n    // http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.qs === 'object' && !isEmpty(opts.qs)) {\n      ['startkey', 'endkey', 'key', 'keys', 'start_key', 'end_key'].forEach(function (key) {\n        if (key in opts.qs) {\n          qs[key] = JSON.stringify(opts.qs[key])\n        }\n      })\n      req.qs = qs\n    }\n\n    if (opts.body) {\n      if (Buffer.isBuffer(opts.body) || opts.dontStringify) {\n        req.body = opts.body\n      } else {\n        req.body = JSON.stringify(opts.body, function (key, value) {\n          // don't encode functions\n          if (typeof (value) === 'function') {\n            return value.toString()\n          } else {\n            return value\n          }\n        })\n      }\n    }\n\n    if (opts.form) {\n      req.headers['content-type'] =\n        'application/x-www-form-urlencoded; charset=utf-8'\n      req.body = querystring.stringify(opts.form).toString('utf8')\n    }\n\n    // ask request to render query string arrays as repeated values e.g.\n    // ?drilldown=[\"author\",\"Dickens\"]&drilldown=[\"publisher\",\"Penguin\"]\n    req.qsStringifyOptions = { arrayFormat: 'repeat' }\n\n    cfg.cookies = cookieJar.getCookiesSync(cfg.url)\n\n    // This where the HTTP request is made.\n    // Nano used to use the now-deprecated \"request\" library but now we're going to\n    // use axios, so let's modify the \"req\" object to suit axios\n    req.url = req.uri\n    delete req.uri\n    req.method = req.method.toLowerCase()\n    req.params = req.qs\n    delete req.qs\n    req.paramsSerializer = (params) => {\n      return querystring.stringify(params, { arrayFormat: 'brackets' })\n    }\n    req.data = req.body\n    delete req.body\n    req.maxRedirects = 0\n    if (opts.stream) {\n      req.responseType = 'stream'\n    } else if (opts.dontParse) {\n      req.responseType = 'arraybuffer'\n    }\n\n    // scrub and log\n    const scrubbedReq = JSON.parse(JSON.stringify(req))\n    scrubbedReq.url = scrubURL(scrubbedReq.url)\n    if (scrubbedReq.auth) {\n      scrubbedReq.auth.username = SCRUBBED_STR\n      scrubbedReq.auth.password = SCRUBBED_STR\n    }\n    log(scrubbedReq)\n\n    // add http agents\n    req.httpAgent = cfg.requestDefaults.agent || defaultHttpAgent\n    req.httpsAgent = cfg.requestDefaults.agent || defaultHttpsAgent\n\n    // actually do the HTTP request\n    if (opts.stream) {\n      // return the Request object for streaming\n      const outStream = new stream.PassThrough()\n      axios(req)\n        .then((response) => {\n          response.data.pipe(outStream)\n        }).catch(e => {\n          streamResponseHandler(e, req, outStream)\n        })\n      return outStream\n    } else {\n      if (typeof callback === 'function') {\n        axios(req).then((response) => {\n          responseHandler(response, req, opts, null, null, callback)\n        }).catch((e) => {\n          responseHandler(e, req, opts, null, null, callback)\n        })\n      } else {\n        return new Promise((resolve, reject) => {\n          axios(req).then((response) => {\n            responseHandler(response, req, opts, resolve, reject)\n          }).catch((e) => {\n            responseHandler(e, req, opts, resolve, reject)\n          })\n        })\n      }\n    }\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/authn.html#cookie-authentication\n  function auth (username, password, callback) {\n    return relax({\n      method: 'POST',\n      db: '_session',\n      form: {\n        name: username,\n        password: password\n      }\n    }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/authn.html#post--_session\n  function session (callback) {\n    return relax({ db: '_session' }, callback)\n  }\n\n  // https://docs.couchdb.org/en/latest/api/server/common.html#api-server-root\n  function info (callback) {\n    return relax({ path: '' }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#get--_db_updates\n  function updates (qs0, callback0) {\n    const { opts, callback } = getCallback(qs0, callback0)\n    return relax({\n      db: '_db_updates',\n      qs: opts\n    }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/common.html#put--db\n  function createDb (dbName, qs0, callback0) {\n    const { opts, callback } = getCallback(qs0, callback0)\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback)\n    }\n    return relax({ db: dbName, method: 'PUT', qs: opts }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/common.html#delete--db\n  function destroyDb (dbName, callback) {\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback)\n    }\n    return relax({ db: dbName, method: 'DELETE' }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/common.html#get--db\n  function getDb (dbName, callback) {\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback)\n    }\n    return relax({ db: dbName }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#get--_all_dbs\n  function listDbs (callback) {\n    return relax({ db: '_all_dbs' }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#get--_all_dbs\n  function listDbsAsStream () {\n    return relax({ db: '_all_dbs', stream: true })\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/compact.html#post--db-_compact\n  function compactDb (dbName, ddoc, callback) {\n    if (typeof ddoc === 'function') {\n      callback = ddoc\n      ddoc = null\n    }\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback)\n    }\n    return relax({\n      db: dbName,\n      doc: '_compact',\n      att: ddoc,\n      method: 'POST'\n    }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/changes.html#get--db-_changes\n  function changesDb (dbName, qs0, callback0) {\n    const { opts, callback } = getCallback(qs0, callback0)\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback)\n    }\n    return relax({ db: dbName, path: '_changes', qs: opts }, callback)\n  }\n\n  function changesDbAsStream (dbName, opts) {\n    return relax({ db: dbName, path: '_changes', stream: true, qs: opts })\n  }\n\n  function _serializeAsUrl (db) {\n    if (typeof db === 'object' && db.config && db.config.url && db.config.db) {\n      return urlResolveFix(db.config.url, encodeURIComponent(db.config.db))\n    } else {\n      try {\n        // if it parses, return it\n        const parsed = new URL(db)\n        return parsed.toString()\n      } catch (e) {\n        // otherwise treat it as a database name\n        return urlResolveFix(cfg.url, encodeURIComponent(db))\n      }\n    }\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#post--_replicate\n  function replicateDb (source, target, opts0, callback0) {\n    const { opts, callback } = getCallback(opts0, callback0)\n\n    if (missing(source, target)) {\n      return callbackOrRejectError(callback)\n    }\n\n    // _replicate\n    opts.source = _serializeAsUrl(source)\n    opts.target = _serializeAsUrl(target)\n\n    return relax({ db: '_replicate', body: opts, method: 'POST' }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#uuids\n  function uuids (count, callback) {\n    if (typeof count === 'function') {\n      callback = count\n      count = 1\n    }\n    count = count || 1\n    return relax({ method: 'GET', path: '_uuids', qs: { count: count } }, callback)\n  }\n\n  // http://guide.couchdb.org/draft/replication.html\n  function enableReplication (source, target, opts0, callback0) {\n    const { opts, callback } = getCallback(opts0, callback0)\n\n    if (missing(source, target)) {\n      return callbackOrRejectError(callback)\n    }\n\n    // _replicator\n    opts.source = _serializeAsUrl(source)\n    opts.target = _serializeAsUrl(target)\n\n    return relax({ db: '_replicator', body: opts, method: 'POST' }, callback)\n  }\n\n  // http://guide.couchdb.org/draft/replication.html\n  function queryReplication (id, opts0, callback0) {\n    const { opts, callback } = getCallback(opts0, callback0)\n    if (missing(id)) {\n      return callbackOrRejectError(callback)\n    }\n    return relax({ db: '_replicator', method: 'GET', path: id, qs: opts }, callback)\n  }\n\n  // http://guide.couchdb.org/draft/replication.html\n  function disableReplication (id, rev, opts0, callback0) {\n    const { opts, callback } = getCallback(opts0, callback0)\n    if (missing(id, rev)) {\n      return callbackOrRejectError(callback)\n    }\n    const req = {\n      db: '_replicator',\n      method: 'DELETE',\n      path: id,\n      qs: Object.assign(opts, { rev: rev })\n    }\n    return relax(req, callback)\n  }\n\n  function docModule (dbName) {\n    let docScope = {}\n    dbName = decodeURIComponent(dbName)\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#put--db-docid\n    // http://docs.couchdb.org/en/latest/api/database/common.html#post--db\n    function insertDoc (doc, qs0, callback0) {\n      const req = { db: dbName, body: doc, method: 'POST' }\n\n      let { opts, callback } = getCallback(qs0, callback0)\n\n      if (typeof opts === 'string') {\n        opts = { docName: opts }\n      }\n\n      if (opts) {\n        if (opts.docName) {\n          req.doc = opts.docName\n          req.method = 'PUT'\n          delete opts.docName\n        }\n        req.qs = opts\n      }\n\n      return relax(req, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#delete--db-docid\n    function destroyDoc (docName, rev, callback) {\n      if (missing(docName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        doc: docName,\n        method: 'DELETE',\n        qs: { rev: rev }\n      }, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#get--db-docid\n    function getDoc (docName, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n\n      if (missing(docName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({ db: dbName, doc: docName, qs: opts }, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#head--db-docid\n    function headDoc (docName, callback) {\n      if (missing(docName)) {\n        return callbackOrRejectError(callback)\n      }\n      if (callback) {\n        relax({\n          db: dbName,\n          doc: docName,\n          method: 'HEAD',\n          qs: {}\n        }, callback)\n      } else {\n        // this function doesn't pass on the Promise from relax because it needs\n        // to return the headers when resolving the Promise\n        return new Promise(function (resolve, reject) {\n          relax({\n            db: dbName,\n            doc: docName,\n            method: 'HEAD',\n            qs: {}\n          }, function (err, body, headers) {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(headers)\n            }\n          })\n        })\n      }\n    }\n\n    // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#get--db-_all_docs\n    function listDoc (qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n      return relax({ db: dbName, path: '_all_docs', qs: opts }, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#get--db-_all_docs\n    function listDocAsStream (opts) {\n      return relax({ db: dbName, path: '_all_docs', qs: opts, stream: true })\n    }\n\n    // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#post--db-_all_docs\n    function fetchDocs (docNames, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n      opts.include_docs = true\n\n      if (missing(docNames) || typeof docNames !== 'object' ||\n          !docNames.keys || !Array.isArray(docNames.keys) ||\n          docNames.keys.length === 0) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        path: '_all_docs',\n        method: 'POST',\n        qs: opts,\n        body: docNames\n      }, callback)\n    }\n\n    function fetchRevs (docNames, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n\n      if (missing(docNames) || typeof docNames !== 'object' ||\n          !docNames.keys || !Array.isArray(docNames.keys) ||\n          docNames.keys.length === 0) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        path: '_all_docs',\n        method: 'POST',\n        qs: opts,\n        body: docNames\n      }, callback)\n    }\n\n    function view (ddoc, viewName, meta, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n\n      if (missing(ddoc, viewName) && !meta.viewPath) {\n        return callbackOrRejectError(callback)\n      }\n\n      if (typeof meta.stream !== 'boolean') {\n        meta.stream = false\n      }\n\n      // prevent mutation of the client qs object by using a clone\n      const qs1 = Object.assign({}, opts)\n\n      const viewPath = meta.viewPath || '_design/' + ddoc + '/_' + meta.type +\n            '/' + viewName\n\n      if (meta.type === 'search') {\n        return relax({\n          db: dbName,\n          path: viewPath,\n          method: 'POST',\n          body: qs1,\n          stream: meta.stream\n        }, callback)\n      } else if (qs1 && qs1.keys) {\n        const body = { keys: qs1.keys }\n        delete qs1.keys\n        return relax({\n          db: dbName,\n          path: viewPath,\n          method: 'POST',\n          qs: qs1,\n          body: body,\n          stream: meta.stream\n        }, callback)\n      } else if (qs1 && qs1.queries) {\n        const body = { queries: qs1.queries }\n        delete qs1.queries\n        return relax({\n          db: dbName,\n          path: viewPath,\n          method: 'POST',\n          qs: qs1,\n          body: body\n        }, callback)\n      } else {\n        const req = {\n          db: dbName,\n          method: meta.method || 'GET',\n          path: viewPath,\n          qs: qs1,\n          stream: meta.stream\n        }\n\n        if (meta.body) {\n          req.body = meta.body\n        }\n\n        return relax(req, callback)\n      }\n    }\n\n    // http://docs.couchdb.org/en/latest/api/ddoc/views.html#post--db-_design-ddoc-_view-view\n    function viewDocs (ddoc, viewName, qs, callback) {\n      return view(ddoc, viewName, { type: 'view' }, qs, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/ddoc/views.html#post--db-_design-ddoc-_view-view\n    function viewDocsAsStream (ddoc, viewName, qs) {\n      return view(ddoc, viewName, { type: 'view', stream: true }, qs)\n    }\n\n    // cloudant\n    function viewSearch (ddoc, viewName, qs, callback) {\n      return view(ddoc, viewName, { type: 'search' }, qs, callback)\n    }\n\n    // cloudant\n    function viewSearchAsStream (ddoc, viewName, qs) {\n      return view(ddoc, viewName, { type: 'search', stream: true }, qs)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/ddoc/render.html#get--db-_design-ddoc-_show-func\n    function showDoc (ddoc, viewName, docName, qs, callback) {\n      if (missing(ddoc, viewName, docName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return view(ddoc, viewName + '/' + docName, { type: 'show' }, qs, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/ddoc/render.html#put--db-_design-ddoc-_update-func-docid\n    function updateWithHandler (ddoc, viewName, docName, body, callback) {\n      if (typeof body === 'function') {\n        callback = body\n        body = undefined\n      }\n      if (missing(ddoc, viewName, docName)) {\n        return callbackOrRejectError(callback)\n      }\n      return view(ddoc, viewName + '/' + encodeURIComponent(docName), {\n        type: 'update',\n        method: 'PUT',\n        body: body\n      }, callback)\n    }\n\n    function viewWithList (ddoc, viewName, listName, qs, callback) {\n      return view(ddoc, listName + '/' + viewName, {\n        type: 'list'\n      }, qs, callback)\n    }\n\n    function viewWithListAsStream (ddoc, viewName, listName, qs, callback) {\n      return view(ddoc, listName + '/' + viewName, {\n        type: 'list', stream: true\n      }, qs, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#post--db-_bulksDoc\n    function bulksDoc (docs, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n      return relax({\n        db: dbName,\n        path: '_bulk_docs',\n        body: docs,\n        method: 'POST',\n        qs: opts\n      }, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#creating-multiple-attachments\n    function insertMultipart (doc, attachments, qs, callback) {\n      if (typeof qs === 'string') {\n        qs = { docName: qs }\n      }\n      qs = qs || {}\n\n      const docName = qs.docName\n      delete qs.docName\n\n      if (missing(doc, attachments, docName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      doc = Object.assign({ _attachments: {} }, doc)\n\n      const multipart = []\n\n      attachments.forEach(function (att) {\n        doc._attachments[att.name] = {\n          follows: true,\n          length: Buffer.isBuffer(att.data) ? att.data.length : Buffer.byteLength(att.data),\n          /* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\n          content_type: att.content_type\n        }\n        multipart.push({ body: att.data })\n      })\n\n      multipart.unshift({\n        'content-type': 'application/json',\n        body: JSON.stringify(doc)\n      })\n\n      return relax({\n        db: dbName,\n        method: 'PUT',\n        contentType: 'multipart/related',\n        doc: docName,\n        qs: qs,\n        multipart: multipart\n      }, callback)\n    }\n\n    function getMultipart (docName, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n      opts.attachments = true\n\n      if (missing(docName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        doc: docName,\n        encoding: null,\n        accept: 'multipart/related',\n        qs: opts\n      }, callback)\n    }\n\n    function insertAtt (docName, attName, att, contentType, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n      if (missing(docName, attName, att, contentType)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        att: attName,\n        method: 'PUT',\n        contentType: contentType,\n        doc: docName,\n        qs: opts,\n        body: att,\n        dontStringify: true\n      }, callback)\n    }\n\n    function getAtt (docName, attName, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n\n      if (missing(docName, attName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        att: attName,\n        doc: docName,\n        qs: opts,\n        encoding: null,\n        dontParse: true\n      }, callback)\n    }\n\n    function getAttAsStream (docName, attName, opts) {\n      return relax({\n        db: dbName,\n        att: attName,\n        doc: docName,\n        qs: opts,\n        stream: true,\n        encoding: null,\n        dontParse: true\n      })\n    }\n\n    function destroyAtt (docName, attName, qs, callback) {\n      if (missing(docName, attName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        att: attName,\n        method: 'DELETE',\n        doc: docName,\n        qs: qs\n      }, callback)\n    }\n\n    function find (query, callback) {\n      if (missing(query) || typeof query !== 'object') {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        path: '_find',\n        method: 'POST',\n        body: query\n      }, callback)\n    }\n\n    function findAsStream (query) {\n      return relax({\n        db: dbName,\n        path: '_find',\n        method: 'POST',\n        body: query,\n        stream: true\n      })\n    }\n\n    function createIndex (indexDef, callback) {\n      if (missing(indexDef) || typeof indexDef !== 'object') {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        path: '_index',\n        method: 'POST',\n        body: indexDef\n      }, callback)\n    }\n\n    function partitionInfo (partitionKey, callback) {\n      if (missing(partitionKey)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        path: '_partition/' + partitionKey\n      }, callback)\n    }\n\n    function partitionedList (partitionKey, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n      if (missing(partitionKey)) {\n        return callbackOrRejectError(callback)\n      }\n      return relax({\n        db: dbName,\n        path: '_partition/' + partitionKey + '/_all_docs',\n        qs: opts\n      }, callback)\n    }\n\n    function partitionedListAsStream (partitionKey, qs) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partitionKey + '/_all_docs',\n        qs: qs,\n        stream: true\n      })\n    }\n\n    function partitionedFind (partition, query, callback) {\n      if (missing(partition, query) || typeof query !== 'object') {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_find',\n        method: 'POST',\n        body: query\n      }, callback)\n    }\n\n    function partitionedFindAsStream (partition, query) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_find',\n        method: 'POST',\n        body: query,\n        stream: true\n      })\n    }\n\n    function partitionedSearch (partition, ddoc, searchName, opts, callback) {\n      if (missing(partition, ddoc, searchName, opts) || typeof opts !== 'object') {\n        return callbackOrRejectError(callback)\n      }\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_search/' + searchName,\n        qs: opts\n      }, callback)\n    }\n\n    function partitionedSearchAsStream (partition, ddoc, searchName, opts) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_search/' + searchName,\n        qs: opts,\n        stream: true\n      })\n    }\n\n    function partitionedView (partition, ddoc, viewName, opts, callback) {\n      if (missing(partition, ddoc, viewName)) {\n        return callbackOrRejectError(callback)\n      }\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_view/' + viewName,\n        qs: opts\n      }, callback)\n    }\n\n    function partitionedViewAsStream (partition, ddoc, viewName, opts) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_view/' + viewName,\n        qs: opts,\n        stream: true\n      })\n    }\n\n    // db level exports\n    docScope = {\n      info: function (cb) {\n        return getDb(dbName, cb)\n      },\n      replicate: function (target, opts, cb) {\n        return replicateDb(dbName, target, opts, cb)\n      },\n      compact: function (cb) {\n        return compactDb(dbName, cb)\n      },\n      changes: function (qs, cb) {\n        return changesDb(dbName, qs, cb)\n      },\n      changesAsStream: function (qs) {\n        return changesDbAsStream(dbName, qs)\n      },\n      changesReader: new ChangesReader(dbName, relax),\n      auth: auth,\n      session: session,\n      insert: insertDoc,\n      get: getDoc,\n      head: headDoc,\n      destroy: destroyDoc,\n      bulk: bulksDoc,\n      list: listDoc,\n      listAsStream: listDocAsStream,\n      fetch: fetchDocs,\n      fetchRevs: fetchRevs,\n      config: { url: cfg.url, db: dbName },\n      multipart: {\n        insert: insertMultipart,\n        get: getMultipart\n      },\n      attachment: {\n        insert: insertAtt,\n        get: getAtt,\n        getAsStream: getAttAsStream,\n        destroy: destroyAtt\n      },\n      show: showDoc,\n      atomic: updateWithHandler,\n      updateWithHandler: updateWithHandler,\n      baseView: view,\n      search: viewSearch,\n      searchAsStream: viewSearchAsStream,\n      view: viewDocs,\n      viewAsStream: viewDocsAsStream,\n      find: find,\n      findAsStream: findAsStream,\n      createIndex: createIndex,\n      viewWithList: viewWithList,\n      viewWithListAsStream: viewWithListAsStream,\n      server: serverScope,\n      replication: {\n        enable: function (target, opts, cb) {\n          return enableReplication(dbName, target, opts, cb)\n        },\n        disable: function (id, revision, opts, cb) {\n          return disableReplication(id, revision, opts, cb)\n        },\n        query: function (id, opts, cb) {\n          return queryReplication(id, opts, cb)\n        }\n      },\n      partitionInfo: partitionInfo,\n      partitionedList: partitionedList,\n      partitionedListAsStream: partitionedListAsStream,\n      partitionedFind: partitionedFind,\n      partitionedFindAsStream: partitionedFindAsStream,\n      partitionedSearch: partitionedSearch,\n      partitionedSearchAsStream: partitionedSearchAsStream,\n      partitionedView: partitionedView,\n      partitionedViewAsStream: partitionedViewAsStream\n    }\n\n    docScope.view.compact = function (ddoc, cb) {\n      return compactDb(dbName, ddoc, cb)\n    }\n\n    return docScope\n  }\n\n  // server level exports\n  serverScope = Object.assign(serverScope, {\n    db: {\n      create: createDb,\n      get: getDb,\n      destroy: destroyDb,\n      list: listDbs,\n      listAsStream: listDbsAsStream,\n      use: docModule,\n      scope: docModule,\n      compact: compactDb,\n      replicate: replicateDb,\n      replication: {\n        enable: enableReplication,\n        disable: disableReplication,\n        query: queryReplication\n      },\n      changes: changesDb,\n      updates: updates\n    },\n    use: docModule,\n    scope: docModule,\n    request: relax,\n    relax: relax,\n    dinosaur: relax,\n    auth: auth,\n    session: session,\n    updates: updates,\n    uuids: uuids,\n    info: info\n  })\n\n  const db = maybeExtractDatabaseComponent()\n\n  return db ? docModule(db) : serverScope\n}\n\n/*\n * and now an ascii dinosaur\n *              _\n *            / _) ROAR! i'm a vegan!\n *     .-^^^-/ /\n *  __/       /\n * /__.|_|-|_|\n *\n * thanks for visiting! come again!\n */\n\nfunction urlResolveFix (couchUrl, dbName) {\n  if (/[^/]$/.test(couchUrl)) {\n    couchUrl += '/'\n  }\n  return new URL(dbName, couchUrl).toString()\n}\n"]},"metadata":{},"sourceType":"script"}