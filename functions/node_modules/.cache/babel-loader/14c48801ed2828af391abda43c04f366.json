{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames, PROGRESS_STATUS_ICON } from '../utils';\nvar defaultProps = {\n  as: 'div',\n  classPrefix: 'progress',\n  percent: 0,\n  strokeWidth: 6,\n  trailWidth: 6,\n  gapDegree: 0,\n  showInfo: true,\n  strokeLinecap: 'round',\n  gapPosition: 'top'\n};\nvar ProgressCircle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _withClassPrefix;\n\n  var Component = props.as,\n      strokeWidth = props.strokeWidth,\n      trailWidth = props.trailWidth,\n      percent = props.percent,\n      strokeLinecap = props.strokeLinecap,\n      className = props.className,\n      showInfo = props.showInfo,\n      status = props.status,\n      classPrefix = props.classPrefix,\n      style = props.style,\n      gapDegree = props.gapDegree,\n      gapPosition = props.gapPosition,\n      trailColor = props.trailColor,\n      strokeColor = props.strokeColor,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"strokeWidth\", \"trailWidth\", \"percent\", \"strokeLinecap\", \"className\", \"showInfo\", \"status\", \"classPrefix\", \"style\", \"gapDegree\", \"gapPosition\", \"trailColor\", \"strokeColor\"]);\n\n  var getPathStyles = useCallback(function () {\n    var radius = 50 - strokeWidth / 2;\n    var beginPositionX = 0;\n    var beginPositionY = -radius;\n    var endPositionX = 0;\n    var endPositionY = -2 * radius;\n\n    switch (gapPosition) {\n      case 'left':\n        beginPositionX = -radius;\n        beginPositionY = 0;\n        endPositionX = 2 * radius;\n        endPositionY = 0;\n        break;\n\n      case 'right':\n        beginPositionX = radius;\n        beginPositionY = 0;\n        endPositionX = -2 * radius;\n        endPositionY = 0;\n        break;\n\n      case 'bottom':\n        beginPositionY = radius;\n        endPositionY = 2 * radius;\n        break;\n\n      default:\n    }\n\n    var pathString = \"M 50,50 m \" + beginPositionX + \",\" + beginPositionY + \"\\n       a \" + radius + \",\" + radius + \" 0 1 1 \" + endPositionX + \",\" + -endPositionY + \"\\n       a \" + radius + \",\" + radius + \" 0 1 1 \" + -endPositionX + \",\" + endPositionY;\n    var len = Math.PI * 2 * radius;\n    var trailPathStyle = {\n      stroke: trailColor,\n      strokeDasharray: len - gapDegree + \"px \" + len + \"px\",\n      strokeDashoffset: \"-\" + gapDegree / 2 + \"px\"\n    };\n    var strokePathStyle = {\n      stroke: strokeColor,\n      strokeDasharray: percent / 100 * (len - gapDegree) + \"px \" + len + \"px\",\n      strokeDashoffset: \"-\" + gapDegree / 2 + \"px\"\n    };\n    return {\n      pathString: pathString,\n      trailPathStyle: trailPathStyle,\n      strokePathStyle: strokePathStyle\n    };\n  }, [gapDegree, gapPosition, percent, strokeColor, strokeWidth, trailColor]);\n\n  var _getPathStyles = getPathStyles(),\n      pathString = _getPathStyles.pathString,\n      trailPathStyle = _getPathStyles.trailPathStyle,\n      strokePathStyle = _getPathStyles.strokePathStyle;\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix;\n\n  var classes = merge(className, withClassPrefix('circle', (_withClassPrefix = {}, _withClassPrefix[\"circle-\" + (status || '')] = !!status, _withClassPrefix)));\n  var showIcon = status && status !== 'active';\n  var info = showIcon ? /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix(\"icon-\" + (status || ''))\n  }, PROGRESS_STATUS_ICON[status]) : /*#__PURE__*/React.createElement(\"span\", {\n    key: 1\n  }, percent, \"%\");\n  return /*#__PURE__*/React.createElement(Component, {\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percent,\n    ref: ref,\n    className: classes,\n    style: style\n  }, showInfo ? /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix('circle-info')\n  }, info) : null, /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: prefix('svg'),\n    viewBox: \"0 0 100 100\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    className: prefix('trail'),\n    d: pathString,\n    strokeWidth: trailWidth || strokeWidth,\n    fillOpacity: \"0\",\n    style: trailPathStyle\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: pathString,\n    strokeLinecap: strokeLinecap,\n    className: prefix('stroke'),\n    strokeWidth: percent === 0 ? 0 : strokeWidth,\n    fillOpacity: \"0\",\n    style: strokePathStyle\n  })));\n});\nProgressCircle.displayName = 'ProgressCircle';\nProgressCircle.defaultProps = defaultProps;\nProgressCircle.propTypes = {\n  className: PropTypes.string,\n  strokeColor: PropTypes.string,\n  strokeLinecap: PropTypes.oneOf(['butt', 'round', 'square']),\n  trailColor: PropTypes.string,\n  percent: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  trailWidth: PropTypes.number,\n  gapDegree: PropTypes.number,\n  gapPosition: PropTypes.oneOf(['top', 'bottom', 'left', 'right']),\n  showInfo: PropTypes.bool,\n  status: PropTypes.oneOf(['success', 'fail', 'active']),\n  classPrefix: PropTypes.string\n};\nexport default ProgressCircle;","map":{"version":3,"sources":["C:/Programowanie/store/node_modules/rsuite/es/Progress/ProgressCircle.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useCallback","PropTypes","useClassNames","PROGRESS_STATUS_ICON","defaultProps","as","classPrefix","percent","strokeWidth","trailWidth","gapDegree","showInfo","strokeLinecap","gapPosition","ProgressCircle","forwardRef","props","ref","_withClassPrefix","Component","className","status","style","trailColor","strokeColor","rest","getPathStyles","radius","beginPositionX","beginPositionY","endPositionX","endPositionY","pathString","len","Math","PI","trailPathStyle","stroke","strokeDasharray","strokeDashoffset","strokePathStyle","_getPathStyles","_useClassNames","prefix","merge","withClassPrefix","classes","showIcon","info","createElement","key","role","viewBox","d","fillOpacity","displayName","propTypes","string","oneOf","number","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames, PROGRESS_STATUS_ICON } from '../utils';\nvar defaultProps = {\n  as: 'div',\n  classPrefix: 'progress',\n  percent: 0,\n  strokeWidth: 6,\n  trailWidth: 6,\n  gapDegree: 0,\n  showInfo: true,\n  strokeLinecap: 'round',\n  gapPosition: 'top'\n};\nvar ProgressCircle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _withClassPrefix;\n\n  var Component = props.as,\n      strokeWidth = props.strokeWidth,\n      trailWidth = props.trailWidth,\n      percent = props.percent,\n      strokeLinecap = props.strokeLinecap,\n      className = props.className,\n      showInfo = props.showInfo,\n      status = props.status,\n      classPrefix = props.classPrefix,\n      style = props.style,\n      gapDegree = props.gapDegree,\n      gapPosition = props.gapPosition,\n      trailColor = props.trailColor,\n      strokeColor = props.strokeColor,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"strokeWidth\", \"trailWidth\", \"percent\", \"strokeLinecap\", \"className\", \"showInfo\", \"status\", \"classPrefix\", \"style\", \"gapDegree\", \"gapPosition\", \"trailColor\", \"strokeColor\"]);\n\n  var getPathStyles = useCallback(function () {\n    var radius = 50 - strokeWidth / 2;\n    var beginPositionX = 0;\n    var beginPositionY = -radius;\n    var endPositionX = 0;\n    var endPositionY = -2 * radius;\n\n    switch (gapPosition) {\n      case 'left':\n        beginPositionX = -radius;\n        beginPositionY = 0;\n        endPositionX = 2 * radius;\n        endPositionY = 0;\n        break;\n\n      case 'right':\n        beginPositionX = radius;\n        beginPositionY = 0;\n        endPositionX = -2 * radius;\n        endPositionY = 0;\n        break;\n\n      case 'bottom':\n        beginPositionY = radius;\n        endPositionY = 2 * radius;\n        break;\n\n      default:\n    }\n\n    var pathString = \"M 50,50 m \" + beginPositionX + \",\" + beginPositionY + \"\\n       a \" + radius + \",\" + radius + \" 0 1 1 \" + endPositionX + \",\" + -endPositionY + \"\\n       a \" + radius + \",\" + radius + \" 0 1 1 \" + -endPositionX + \",\" + endPositionY;\n    var len = Math.PI * 2 * radius;\n    var trailPathStyle = {\n      stroke: trailColor,\n      strokeDasharray: len - gapDegree + \"px \" + len + \"px\",\n      strokeDashoffset: \"-\" + gapDegree / 2 + \"px\"\n    };\n    var strokePathStyle = {\n      stroke: strokeColor,\n      strokeDasharray: percent / 100 * (len - gapDegree) + \"px \" + len + \"px\",\n      strokeDashoffset: \"-\" + gapDegree / 2 + \"px\"\n    };\n    return {\n      pathString: pathString,\n      trailPathStyle: trailPathStyle,\n      strokePathStyle: strokePathStyle\n    };\n  }, [gapDegree, gapPosition, percent, strokeColor, strokeWidth, trailColor]);\n\n  var _getPathStyles = getPathStyles(),\n      pathString = _getPathStyles.pathString,\n      trailPathStyle = _getPathStyles.trailPathStyle,\n      strokePathStyle = _getPathStyles.strokePathStyle;\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix;\n\n  var classes = merge(className, withClassPrefix('circle', (_withClassPrefix = {}, _withClassPrefix[\"circle-\" + (status || '')] = !!status, _withClassPrefix)));\n  var showIcon = status && status !== 'active';\n  var info = showIcon ? /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix(\"icon-\" + (status || ''))\n  }, PROGRESS_STATUS_ICON[status]) : /*#__PURE__*/React.createElement(\"span\", {\n    key: 1\n  }, percent, \"%\");\n  return /*#__PURE__*/React.createElement(Component, {\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percent,\n    ref: ref,\n    className: classes,\n    style: style\n  }, showInfo ? /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix('circle-info')\n  }, info) : null, /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: prefix('svg'),\n    viewBox: \"0 0 100 100\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    className: prefix('trail'),\n    d: pathString,\n    strokeWidth: trailWidth || strokeWidth,\n    fillOpacity: \"0\",\n    style: trailPathStyle\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: pathString,\n    strokeLinecap: strokeLinecap,\n    className: prefix('stroke'),\n    strokeWidth: percent === 0 ? 0 : strokeWidth,\n    fillOpacity: \"0\",\n    style: strokePathStyle\n  })));\n});\nProgressCircle.displayName = 'ProgressCircle';\nProgressCircle.defaultProps = defaultProps;\nProgressCircle.propTypes = {\n  className: PropTypes.string,\n  strokeColor: PropTypes.string,\n  strokeLinecap: PropTypes.oneOf(['butt', 'round', 'square']),\n  trailColor: PropTypes.string,\n  percent: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  trailWidth: PropTypes.number,\n  gapDegree: PropTypes.number,\n  gapPosition: PropTypes.oneOf(['top', 'bottom', 'left', 'right']),\n  showInfo: PropTypes.bool,\n  status: PropTypes.oneOf(['success', 'fail', 'active']),\n  classPrefix: PropTypes.string\n};\nexport default ProgressCircle;"]},"metadata":{},"sourceType":"module"}