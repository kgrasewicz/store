{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _omit from \"lodash/omit\";\nimport _isFunction from \"lodash/isFunction\";\nimport _pick from \"lodash/pick\";\nimport _isNil from \"lodash/isNil\";\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { List, AutoSizer } from '../Picker/VirtualizedList';\nimport CheckTreeNode from './CheckTreeNode';\nimport { createChainedFunction, useCustom, useClassNames, useControlled, KEY_CODE, mergeRefs, shallowEqual } from '../utils';\nimport { PickerToggle, onMenuKeyDown as _onMenuKeyDown, PickerOverlay, SearchBar, SelectedElement, PickerToggleTrigger, createConcatChildrenFunction, usePickerClassName, usePublicMethods, pickTriggerPropKeys, omitTriggerPropKeys, listPickerPropTypes, listPickerDefaultProps, useToggleKeyDownEvent } from '../Picker';\nimport { isEveryChildChecked, isSomeNodeHasChildren, isAllSiblingNodeUncheckable, isEveryFirstLevelNodeUncheckable, getFormattedTree, getDisabledState, getCheckTreePickerDefaultValue, getSelectedItems, isNodeUncheckable } from './utils';\nimport { hasVisibleChildren, getExpandWhenSearching, useTreeSearch, useTreeNodeRefs, getDefaultExpandItemValues, useFlattenTreeData, focusNextItem, getFocusableItems, focusPreviousItem, toggleExpand, getActiveItem, useGetTreeNodeChildren, focusToActiveTreeNode, focusTreeNode, leftArrowHandler, rightArrowHandler } from '../utils/treeUtils';\nimport { maxTreeHeight } from '../TreePicker/TreePicker';\n\nvar defaultProps = _extends({}, listPickerDefaultProps, {\n  as: 'div',\n  height: 360,\n  cascade: true,\n  countable: true,\n  searchable: true,\n  menuAutoWidth: true,\n  defaultValue: [],\n  appearance: 'default',\n  uncheckableItemValues: [],\n  classPrefix: 'picker',\n  placement: 'bottomStart',\n  locale: {\n    placeholder: 'Select',\n    searchPlaceholder: 'Search',\n    noResultsText: 'No results found',\n    checkAll: 'All'\n  }\n});\n\nvar CheckTreePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var Component = props.as,\n      data = props.data,\n      style = props.style,\n      cleanable = props.cleanable,\n      countable = props.countable,\n      searchBy = props.searchBy,\n      toggleAs = props.toggleAs,\n      searchKeyword = props.searchKeyword,\n      overrideLocale = props.locale,\n      inline = props.inline,\n      cascade = props.cascade,\n      disabled = props.disabled,\n      valueKey = props.valueKey,\n      labelKey = props.labelKey,\n      placement = props.placement,\n      childrenKey = props.childrenKey,\n      placeholder = props.placeholder,\n      controlledValue = props.value,\n      defaultValue = props.defaultValue,\n      defaultExpandAll = props.defaultExpandAll,\n      disabledItemValues = props.disabledItemValues,\n      controlledExpandItemValues = props.expandItemValues,\n      defaultExpandItemValues = props.defaultExpandItemValues,\n      height = props.height,\n      menuStyle = props.menuStyle,\n      searchable = props.searchable,\n      virtualized = props.virtualized,\n      className = props.className,\n      classPrefix = props.classPrefix,\n      menuClassName = props.menuClassName,\n      menuAutoWidth = props.menuAutoWidth,\n      uncheckableItemValues = props.uncheckableItemValues,\n      id = props.id,\n      renderMenu = props.renderMenu,\n      getChildren = props.getChildren,\n      renderExtraFooter = props.renderExtraFooter,\n      onEntered = props.onEntered,\n      onChange = props.onChange,\n      onClean = props.onClean,\n      onClose = props.onClose,\n      onExited = props.onExited,\n      onSearch = props.onSearch,\n      onSelect = props.onSelect,\n      onOpen = props.onOpen,\n      onScroll = props.onScroll,\n      onExpand = props.onExpand,\n      renderValue = props.renderValue,\n      renderTreeIcon = props.renderTreeIcon,\n      renderTreeNode = props.renderTreeNode,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"data\", \"style\", \"cleanable\", \"countable\", \"searchBy\", \"toggleAs\", \"searchKeyword\", \"locale\", \"inline\", \"cascade\", \"disabled\", \"valueKey\", \"labelKey\", \"placement\", \"childrenKey\", \"placeholder\", \"value\", \"defaultValue\", \"defaultExpandAll\", \"disabledItemValues\", \"expandItemValues\", \"defaultExpandItemValues\", \"height\", \"menuStyle\", \"searchable\", \"virtualized\", \"className\", \"classPrefix\", \"menuClassName\", \"menuAutoWidth\", \"uncheckableItemValues\", \"id\", \"renderMenu\", \"getChildren\", \"renderExtraFooter\", \"onEntered\", \"onChange\", \"onClean\", \"onClose\", \"onExited\", \"onSearch\", \"onSelect\", \"onOpen\", \"onScroll\", \"onExpand\", \"renderValue\", \"renderTreeIcon\", \"renderTreeNode\"]);\n\n  var triggerRef = useRef();\n  var targetRef = useRef();\n  var listRef = useRef();\n  var overlayRef = useRef();\n  var treeViewRef = useRef();\n\n  var _useCustom = useCustom('Picker', overrideLocale),\n      rtl = _useCustom.rtl,\n      locale = _useCustom.locale;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(null),\n      activeNode = _useState2[0],\n      setActiveNode = _useState2[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge;\n\n  var _useClassNames2 = useClassNames('check-tree'),\n      checkTreePrefix = _useClassNames2.prefix,\n      withCheckTreeClassPrefix = _useClassNames2.withClassPrefix;\n\n  var _useControlled = useControlled(controlledValue, defaultValue),\n      value = _useControlled[0],\n      setValue = _useControlled[1],\n      isControlled = _useControlled[2];\n\n  var _useGetTreeNodeChildr = useGetTreeNodeChildren(data, valueKey, childrenKey),\n      treeData = _useGetTreeNodeChildr.data,\n      setTreeData = _useGetTreeNodeChildr.setData,\n      loadingNodeValues = _useGetTreeNodeChildr.loadingNodeValues,\n      loadChildren = _useGetTreeNodeChildr.loadChildren;\n\n  var _useControlled2 = useControlled(controlledExpandItemValues, getDefaultExpandItemValues(treeData, {\n    defaultExpandAll: defaultExpandAll,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    defaultExpandItemValues: defaultExpandItemValues\n  })),\n      expandItemValues = _useControlled2[0],\n      setExpandItemValues = _useControlled2[1];\n\n  var _useState3 = useState(null),\n      focusItemValue = _useState3[0],\n      setFocusItemValue = _useState3[1];\n\n  var _useFlattenTreeData = useFlattenTreeData({\n    data: treeData,\n    labelKey: labelKey,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    uncheckableItemValues: uncheckableItemValues,\n    callback: function callback(nodes) {\n      // after flattenData, always unSerialize check property value\n      unSerializeList({\n        nodes: nodes,\n        key: 'check',\n        value: value,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      forceUpdate();\n    }\n  }),\n      flattenNodes = _useFlattenTreeData.flattenNodes,\n      forceUpdate = _useFlattenTreeData.forceUpdate,\n      formatVirtualizedTreeData = _useFlattenTreeData.formatVirtualizedTreeData,\n      serializeListOnlyParent = _useFlattenTreeData.serializeListOnlyParent,\n      unSerializeList = _useFlattenTreeData.unSerializeList;\n\n  var _useTreeSearch = useTreeSearch({\n    labelKey: labelKey,\n    childrenKey: childrenKey,\n    searchKeyword: searchKeyword,\n    data: treeData,\n    searchBy: searchBy,\n    callback: function callback(searchKeyword, _filterData, event) {\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchKeyword, event);\n    }\n  }),\n      filteredData = _useTreeSearch.filteredData,\n      searchKeywordState = _useTreeSearch.searchKeywordState,\n      setSearchKeyword = _useTreeSearch.setSearchKeyword,\n      handleSearch = _useTreeSearch.handleSearch,\n      setFilteredData = _useTreeSearch.setFilteredData;\n\n  var _useTreeNodeRefs = useTreeNodeRefs(),\n      treeNodesRefs = _useTreeNodeRefs.treeNodesRefs,\n      saveTreeNodeRef = _useTreeNodeRefs.saveTreeNodeRef;\n  /**\n   * get formatted nodes for render tree\n   * @params render - renderNode function. only used when virtualized setting false\n   */\n\n\n  var getFormattedNodes = useCallback(function (render) {\n    var formattedNodes = [];\n\n    if (virtualized) {\n      formattedNodes = formatVirtualizedTreeData(flattenNodes, filteredData, expandItemValues, cascade).filter(function (item) {\n        return item.showNode && item.visible;\n      });\n    } else {\n      formattedNodes = getFormattedTree(filteredData, flattenNodes, {\n        childrenKey: childrenKey,\n        cascade: cascade\n      }).map(function (node) {\n        return render === null || render === void 0 ? void 0 : render(node, 1);\n      });\n    }\n\n    return formattedNodes;\n  }, [expandItemValues, filteredData, flattenNodes, formatVirtualizedTreeData, virtualized, childrenKey, cascade]);\n\n  var getTreeNodeProps = function getTreeNodeProps(node, layer) {\n    return {\n      as: Component,\n      rtl: rtl,\n      value: node[valueKey],\n      label: node[labelKey],\n      layer: layer,\n      focus: shallowEqual(focusItemValue, node[valueKey]),\n      expand: node.expand,\n      visible: node.visible,\n      loading: loadingNodeValues.some(function (item) {\n        return shallowEqual(item, node[valueKey]);\n      }),\n      disabled: getDisabledState(flattenNodes, node, {\n        disabledItemValues: disabledItemValues,\n        valueKey: valueKey\n      }),\n      nodeData: node,\n      checkState: node.checkState,\n      uncheckable: isNodeUncheckable(node, {\n        uncheckableItemValues: uncheckableItemValues,\n        valueKey: valueKey\n      }),\n      allUncheckable: isAllSiblingNodeUncheckable(node, flattenNodes, uncheckableItemValues, valueKey),\n      onSelect: handleSelect,\n      onExpand: handleExpand,\n      onRenderTreeNode: renderTreeNode,\n      onRenderTreeIcon: renderTreeIcon\n    };\n  };\n\n  var focusActiveNode = useCallback(function () {\n    focusToActiveTreeNode({\n      list: listRef.current,\n      valueKey: valueKey,\n      selector: \".\" + checkTreePrefix('node-active'),\n      activeNode: activeNode,\n      virtualized: virtualized,\n      container: treeViewRef.current,\n      formattedNodes: getFormattedNodes()\n    });\n  }, [checkTreePrefix, activeNode, getFormattedNodes, valueKey, virtualized]);\n  useEffect(function () {\n    setValue(getCheckTreePickerDefaultValue(value, uncheckableItemValues));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setFilteredData(data, searchKeywordState);\n    setTreeData(data);\n  }, [data, searchKeywordState, setFilteredData, setTreeData]);\n  useEffect(function () {\n    setFilteredData(treeData, searchKeywordState);\n  }, [treeData, searchKeywordState, setFilteredData]);\n  useEffect(function () {\n    if (Array.isArray(controlledExpandItemValues)) {\n      setExpandItemValues(controlledExpandItemValues);\n    }\n  }, [controlledExpandItemValues, setExpandItemValues]);\n  useEffect(function () {\n    setSearchKeyword(searchKeyword !== null && searchKeyword !== void 0 ? searchKeyword : '');\n  }, [searchKeyword, setSearchKeyword]);\n  useEffect(function () {\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: value,\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    forceUpdate();\n  }, [cascade, value, uncheckableItemValues, unSerializeList, flattenNodes, forceUpdate]);\n  var toggleUpChecked = useCallback(function (nodes, node, checked) {\n    var currentNode = nodes[node.refKey];\n\n    if (cascade) {\n      if (!checked) {\n        currentNode.check = checked;\n        currentNode.checkAll = checked;\n      } else {\n        if (isEveryChildChecked(nodes, currentNode)) {\n          currentNode.check = true;\n          currentNode.checkAll = true;\n        } else {\n          currentNode.check = false;\n          currentNode.checkAll = false;\n        }\n      }\n\n      if (currentNode.parent) {\n        toggleUpChecked(nodes, currentNode.parent, checked);\n      }\n    }\n  }, [cascade]);\n  var toggleDownChecked = useCallback(function (nodes, node, isChecked) {\n    var currentNode = nodes[node.refKey];\n    currentNode.check = isChecked;\n\n    if (!currentNode[childrenKey] || !currentNode[childrenKey].length || !cascade) {\n      currentNode.checkAll = false;\n    } else {\n      currentNode.checkAll = isChecked;\n      currentNode[childrenKey].forEach(function (child) {\n        toggleDownChecked(nodes, child, isChecked);\n      });\n    }\n  }, [cascade, childrenKey]);\n  var toggleChecked = useCallback(function (node, isChecked) {\n    var nodes = _cloneDeep(flattenNodes);\n\n    toggleDownChecked(nodes, node, isChecked);\n    node.parent && toggleUpChecked(nodes, node.parent, isChecked);\n    var values = serializeListOnlyParent(nodes, 'check'); // filter uncheckableItemValues\n\n    return values.filter(function (v) {\n      return !uncheckableItemValues.includes(v);\n    });\n  }, [flattenNodes, uncheckableItemValues, serializeListOnlyParent, toggleDownChecked, toggleUpChecked]);\n  var handleSelect = useCallback(function (node, event) {\n    if (!node) {\n      return;\n    }\n\n    var selectedValues = toggleChecked(node, !flattenNodes[node.refKey].check);\n\n    if (!isControlled) {\n      unSerializeList({\n        nodes: flattenNodes,\n        key: 'check',\n        value: selectedValues,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      setValue(selectedValues);\n    }\n\n    setActiveNode(node);\n    setFocusItemValue(node[valueKey]);\n    onChange === null || onChange === void 0 ? void 0 : onChange(selectedValues, event);\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(node, selectedValues, event);\n  }, [cascade, valueKey, flattenNodes, isControlled, uncheckableItemValues, setValue, onChange, onSelect, toggleChecked, unSerializeList]);\n\n  var hasValue = function hasValue() {\n    var selectedValues = Object.keys(flattenNodes).map(function (refKey) {\n      return flattenNodes[refKey][valueKey];\n    }).filter(function (item) {\n      return value.some(function (v) {\n        return shallowEqual(v, item);\n      });\n    });\n    return !!selectedValues.length;\n  };\n\n  var handleOpen = useCallback(function () {\n    var _triggerRef$current, _triggerRef$current$o;\n\n    (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$o = _triggerRef$current.open) === null || _triggerRef$current$o === void 0 ? void 0 : _triggerRef$current$o.call(_triggerRef$current);\n    setFocusItemValue(activeNode === null || activeNode === void 0 ? void 0 : activeNode[valueKey]);\n    focusActiveNode();\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    setActive(true);\n  }, [activeNode, focusActiveNode, onOpen, valueKey]);\n  var handleClose = useCallback(function () {\n    var _triggerRef$current2, _triggerRef$current2$, _targetRef$current;\n\n    (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : (_triggerRef$current2$ = _triggerRef$current2.close) === null || _triggerRef$current2$ === void 0 ? void 0 : _triggerRef$current2$.call(_triggerRef$current2);\n    setSearchKeyword('');\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n    setFocusItemValue(null);\n    setActive(false);\n    /**\n     * when using keyboard toggle picker, should refocus on PickerToggle Component after close picker menu\n     */\n\n    (_targetRef$current = targetRef.current) === null || _targetRef$current === void 0 ? void 0 : _targetRef$current.focus();\n  }, [onClose, setSearchKeyword]);\n  var handleExpand = useCallback(function (node) {\n    var nextExpandItemValues = toggleExpand({\n      node: node,\n      isExpand: !node.expand,\n      expandItemValues: expandItemValues,\n      valueKey: valueKey\n    });\n    setExpandItemValues(nextExpandItemValues);\n    onExpand === null || onExpand === void 0 ? void 0 : onExpand(nextExpandItemValues, node, createConcatChildrenFunction(node, node[valueKey], {\n      valueKey: valueKey,\n      childrenKey: childrenKey\n    }));\n\n    if (_isFunction(getChildren) && !node.expand && Array.isArray(node[childrenKey]) && node[childrenKey].length === 0) {\n      loadChildren(node, getChildren);\n    }\n  }, [childrenKey, expandItemValues, getChildren, loadChildren, onExpand, setExpandItemValues, valueKey]);\n  usePublicMethods(ref, {\n    triggerRef: triggerRef,\n    overlayRef: overlayRef,\n    targetRef: targetRef\n  });\n  var handleClean = useCallback(function (event) {\n    setActiveNode(null);\n    setValue([]);\n    setFocusItemValue(null);\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: [],\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    onChange === null || onChange === void 0 ? void 0 : onChange([], event);\n  }, [cascade, flattenNodes, onChange, setValue, unSerializeList, uncheckableItemValues]);\n  var handleFocusItem = useCallback(function (type) {\n    var focusableItems = getFocusableItems(filteredData, {\n      disabledItemValues: disabledItemValues,\n      valueKey: valueKey,\n      childrenKey: childrenKey,\n      expandItemValues: expandItemValues\n    });\n    var selector = \".\" + checkTreePrefix('node-label');\n    var focusProps = {\n      focusItemValue: focusItemValue,\n      focusableItems: focusableItems,\n      treeNodesRefs: treeNodesRefs,\n      selector: selector,\n      valueKey: valueKey,\n      callback: function callback(nextFocusItemValue) {\n        setFocusItemValue(nextFocusItemValue);\n      }\n    };\n\n    if (type === KEY_CODE.DOWN) {\n      focusNextItem(focusProps);\n      return;\n    }\n\n    if (type === KEY_CODE.UP) {\n      focusPreviousItem(focusProps);\n    }\n  }, [checkTreePrefix, expandItemValues, filteredData, focusItemValue, treeNodesRefs, childrenKey, valueKey, disabledItemValues]);\n  var handleLeftArrow = useCallback(function () {\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    leftArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      onExpand: handleExpand,\n      onFocusItem: function onFocusItem() {\n        var _focusItem$parent, _focusItem$parent2;\n\n        setFocusItemValue(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent = focusItem.parent) === null || _focusItem$parent === void 0 ? void 0 : _focusItem$parent[valueKey]);\n        focusTreeNode(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent2 = focusItem.parent) === null || _focusItem$parent2 === void 0 ? void 0 : _focusItem$parent2.refKey, treeNodesRefs, \".\" + checkTreePrefix('node-label'));\n      }\n    });\n  }, [checkTreePrefix, expandItemValues, flattenNodes, focusItemValue, handleExpand, treeNodesRefs, valueKey]);\n  var handleRightArrow = useCallback(function () {\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    rightArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      childrenKey: childrenKey,\n      onExpand: handleExpand,\n      onFocusItem: function onFocusItem() {\n        handleFocusItem(KEY_CODE.DOWN);\n      }\n    });\n  }, [focusItemValue, flattenNodes, valueKey, expandItemValues, childrenKey, handleExpand, handleFocusItem]);\n  var selectActiveItem = useCallback(function (event) {\n    var activeItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n\n    if (!isNodeUncheckable(activeItem, {\n      uncheckableItemValues: uncheckableItemValues,\n      valueKey: valueKey\n    }) && activeItem !== null) {\n      handleSelect(activeItem, event);\n    }\n  }, [flattenNodes, focusItemValue, handleSelect, uncheckableItemValues, valueKey]);\n  var onPickerKeydown = useToggleKeyDownEvent({\n    toggle: !focusItemValue || !active,\n    triggerRef: triggerRef,\n    targetRef: targetRef,\n    overlayRef: overlayRef,\n    active: active,\n    onExit: handleClean,\n    onClose: handleClose,\n    onMenuKeyDown: function onMenuKeyDown(event) {\n      _onMenuKeyDown(event, {\n        down: function down() {\n          return handleFocusItem(KEY_CODE.DOWN);\n        },\n        up: function up() {\n          return handleFocusItem(KEY_CODE.UP);\n        },\n        left: rtl ? handleRightArrow : handleLeftArrow,\n        right: rtl ? handleLeftArrow : handleRightArrow,\n        enter: selectActiveItem,\n        del: handleClean\n      });\n    }\n  });\n  var handleTreeKeydown = useCallback(function (event) {\n    if (!treeViewRef.current) {\n      return;\n    }\n\n    _onMenuKeyDown(event, {\n      down: function down() {\n        return handleFocusItem(KEY_CODE.DOWN);\n      },\n      up: function up() {\n        return handleFocusItem(KEY_CODE.UP);\n      },\n      left: rtl ? handleRightArrow : handleLeftArrow,\n      right: rtl ? handleLeftArrow : handleRightArrow,\n      enter: selectActiveItem\n    });\n  }, [handleFocusItem, handleLeftArrow, handleRightArrow, rtl, selectActiveItem]);\n\n  var renderNode = function renderNode(node, layer) {\n    var visible = node.visible,\n        refKey = node.refKey; // when searching, all nodes should be expand\n\n    var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n    if (!visible) {\n      return null;\n    }\n\n    var children = node[childrenKey];\n    var visibleChildren = _isUndefined(searchKeywordState) || searchKeywordState.length === 0 ? !!children : hasVisibleChildren(node, childrenKey);\n\n    var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n      expand: expand\n    }), layer), {\n      hasChildren: visibleChildren\n    });\n\n    if (nodeProps.hasChildren) {\n      var _merge;\n\n      layer += 1;\n      var openClass = checkTreePrefix('open');\n      var childrenClass = merge(checkTreePrefix('node-children'), (_merge = {}, _merge[openClass] = expand && visibleChildren, _merge));\n      var nodes = children || [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: childrenClass,\n        key: node[valueKey]\n      }, /*#__PURE__*/React.createElement(CheckTreeNode, _extends({}, nodeProps, {\n        ref: function ref(_ref) {\n          return saveTreeNodeRef(refKey, _ref);\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: checkTreePrefix('children')\n      }, nodes.map(function (child) {\n        return renderNode(child, layer);\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n      key: node[valueKey],\n      ref: function ref(_ref2) {\n        return saveTreeNodeRef(refKey, _ref2);\n      }\n    }, nodeProps));\n  };\n\n  var renderVirtualListNode = function renderVirtualListNode(nodes) {\n    return function (_ref3) {\n      var key = _ref3.key,\n          index = _ref3.index,\n          style = _ref3.style;\n      var node = nodes[index];\n      var layer = node.layer,\n          refKey = node.refKey,\n          showNode = node.showNode;\n      var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n      var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n        expand: expand\n      }), layer), {\n        hasChildren: node.hasChildren\n      });\n\n      return showNode && /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n        style: style,\n        key: key,\n        ref: function ref(_ref4) {\n          return saveTreeNodeRef(refKey, _ref4);\n        }\n      }, nodeProps));\n    };\n  };\n\n  var renderCheckTree = function renderCheckTree() {\n    var _withCheckTreeClassPr, _merge2;\n\n    var classes = withCheckTreeClassPrefix((_withCheckTreeClassPr = {}, _withCheckTreeClassPr[className !== null && className !== void 0 ? className : ''] = inline, _withCheckTreeClassPr['without-children'] = !isSomeNodeHasChildren, _withCheckTreeClassPr.virtualized = virtualized, _withCheckTreeClassPr));\n    var formattedNodes = getFormattedNodes(renderNode);\n\n    if (!formattedNodes.some(function (v) {\n      return v !== null;\n    })) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('none')\n      }, locale.noResultsText);\n    }\n\n    var treeNodesClass = merge(checkTreePrefix('nodes'), (_merge2 = {}, _merge2[checkTreePrefix('all-uncheckable')] = isEveryFirstLevelNodeUncheckable(flattenNodes, uncheckableItemValues, valueKey), _merge2));\n    var styles = inline ? _extends({\n      height: height\n    }, style) : {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id ? id + \"-listbox\" : undefined,\n      ref: treeViewRef,\n      role: \"tree\",\n      \"aria-multiselectable\": true,\n      className: classes,\n      style: styles,\n      onScroll: onScroll,\n      onKeyDown: inline ? handleTreeKeydown : undefined\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: treeNodesClass\n    }, virtualized ? /*#__PURE__*/React.createElement(AutoSizer, {\n      defaultHeight: inline ? height : maxTreeHeight,\n      style: {\n        width: 'auto',\n        height: 'auto'\n      }\n    }, function (_ref5) {\n      var height = _ref5.height,\n          width = _ref5.width;\n      return /*#__PURE__*/React.createElement(List, {\n        ref: listRef,\n        width: width,\n        height: height,\n        rowHeight: 36,\n        rowCount: formattedNodes.length,\n        rowRenderer: renderVirtualListNode(formattedNodes),\n        scrollToAlignment: \"center\"\n      });\n    }) : formattedNodes));\n  };\n\n  var renderDropdownMenu = function renderDropdownMenu(positionProps, speakerRef) {\n    var left = positionProps.left,\n        top = positionProps.top,\n        className = positionProps.className;\n    var classes = classNames(className, menuClassName, prefix('check-tree-menu'));\n\n    var mergedMenuStyle = _extends({}, menuStyle, {\n      left: left,\n      top: top\n    });\n\n    var styles = virtualized ? _extends({\n      height: height\n    }, mergedMenuStyle) : _extends({}, mergedMenuStyle);\n    return /*#__PURE__*/React.createElement(PickerOverlay, {\n      autoWidth: menuAutoWidth,\n      className: classes,\n      style: styles,\n      ref: mergeRefs(overlayRef, speakerRef),\n      onKeyDown: onPickerKeydown,\n      target: triggerRef\n    }, searchable ? /*#__PURE__*/React.createElement(SearchBar, {\n      placeholder: locale.searchPlaceholder,\n      onChange: handleSearch,\n      value: searchKeywordState\n    }) : null, renderMenu ? renderMenu(renderCheckTree()) : renderCheckTree(), renderExtraFooter === null || renderExtraFooter === void 0 ? void 0 : renderExtraFooter());\n  };\n  /**\n   * 1.Have a value and the value is valid.\n   * 2.Regardless of whether the value is valid, as long as renderValue is set, it is judged to have a value.\n   */\n\n\n  var hasValidValue = hasValue() || value.length > 0 && _isFunction(renderValue);\n\n  var selectedElement = placeholder;\n  var selectedItems = getSelectedItems(flattenNodes, value, valueKey);\n\n  if (hasValidValue) {\n    selectedElement = /*#__PURE__*/React.createElement(SelectedElement, {\n      selectedItems: selectedItems,\n      countable: countable,\n      valueKey: valueKey,\n      labelKey: labelKey,\n      childrenKey: childrenKey,\n      prefix: prefix,\n      cascade: cascade,\n      locale: locale\n    });\n\n    if (_isFunction(renderValue)) {\n      selectedElement = renderValue(value, selectedItems, selectedElement);\n\n      if (_isNil(selectedElement)) {\n        hasValidValue = false;\n      }\n    }\n  }\n\n  var _usePickerClassName = usePickerClassName(_extends({}, props, {\n    hasValue: hasValidValue,\n    name: 'check-tree'\n  })),\n      classes = _usePickerClassName[0],\n      usedClassNamePropKeys = _usePickerClassName[1];\n\n  if (inline) {\n    return renderCheckTree();\n  }\n\n  return /*#__PURE__*/React.createElement(PickerToggleTrigger, {\n    pickerProps: _pick(props, pickTriggerPropKeys),\n    ref: triggerRef,\n    placement: placement,\n    onEnter: handleOpen,\n    onEntered: onEntered,\n    onExited: createChainedFunction(handleClose, onExited),\n    speaker: renderDropdownMenu\n  }, /*#__PURE__*/React.createElement(Component, {\n    className: classes,\n    style: style\n  }, /*#__PURE__*/React.createElement(PickerToggle, _extends({}, _omit(rest, [].concat(omitTriggerPropKeys, usedClassNamePropKeys)), {\n    id: id,\n    ref: targetRef,\n    onKeyDown: onPickerKeydown,\n    onClean: createChainedFunction(handleClean, onClean),\n    cleanable: cleanable && !disabled,\n    disabled: disabled,\n    as: toggleAs,\n    hasValue: hasValidValue,\n    active: active,\n    placement: placement,\n    inputValue: value\n  }), selectedElement || locale.placeholder)));\n});\nCheckTreePicker.displayName = 'CheckTreePicker';\nCheckTreePicker.defaultProps = defaultProps;\nCheckTreePicker.propTypes = _extends({}, listPickerPropTypes, {\n  height: PropTypes.number,\n  appearance: PropTypes.oneOf(['default', 'subtle']),\n  inline: PropTypes.bool,\n  locale: PropTypes.any,\n  cascade: PropTypes.bool,\n  countable: PropTypes.bool,\n  searchable: PropTypes.bool,\n  virtualized: PropTypes.bool,\n  searchKeyword: PropTypes.string,\n  menuAutoWidth: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  containerPadding: PropTypes.number,\n  disabledItemValues: PropTypes.array,\n  expandItemValues: PropTypes.array,\n  defaultExpandItemValues: PropTypes.array,\n  uncheckableItemValues: PropTypes.array,\n  onSearch: PropTypes.func,\n  onExpand: PropTypes.func,\n  onSelect: PropTypes.func,\n  renderMenu: PropTypes.func,\n  renderTreeNode: PropTypes.func,\n  renderTreeIcon: PropTypes.func,\n  searchBy: PropTypes.func,\n  onScroll: PropTypes.func\n});\nexport default CheckTreePicker;","map":{"version":3,"sources":["C:/Programowanie/store/node_modules/rsuite/es/CheckTreePicker/CheckTreePicker.js"],"names":["_objectWithoutPropertiesLoose","_extends","_isUndefined","_cloneDeep","_omit","_isFunction","_pick","_isNil","React","useState","useRef","useEffect","useCallback","PropTypes","classNames","List","AutoSizer","CheckTreeNode","createChainedFunction","useCustom","useClassNames","useControlled","KEY_CODE","mergeRefs","shallowEqual","PickerToggle","onMenuKeyDown","_onMenuKeyDown","PickerOverlay","SearchBar","SelectedElement","PickerToggleTrigger","createConcatChildrenFunction","usePickerClassName","usePublicMethods","pickTriggerPropKeys","omitTriggerPropKeys","listPickerPropTypes","listPickerDefaultProps","useToggleKeyDownEvent","isEveryChildChecked","isSomeNodeHasChildren","isAllSiblingNodeUncheckable","isEveryFirstLevelNodeUncheckable","getFormattedTree","getDisabledState","getCheckTreePickerDefaultValue","getSelectedItems","isNodeUncheckable","hasVisibleChildren","getExpandWhenSearching","useTreeSearch","useTreeNodeRefs","getDefaultExpandItemValues","useFlattenTreeData","focusNextItem","getFocusableItems","focusPreviousItem","toggleExpand","getActiveItem","useGetTreeNodeChildren","focusToActiveTreeNode","focusTreeNode","leftArrowHandler","rightArrowHandler","maxTreeHeight","defaultProps","as","height","cascade","countable","searchable","menuAutoWidth","defaultValue","appearance","uncheckableItemValues","classPrefix","placement","locale","placeholder","searchPlaceholder","noResultsText","checkAll","CheckTreePicker","forwardRef","props","ref","Component","data","style","cleanable","searchBy","toggleAs","searchKeyword","overrideLocale","inline","disabled","valueKey","labelKey","childrenKey","controlledValue","value","defaultExpandAll","disabledItemValues","controlledExpandItemValues","expandItemValues","defaultExpandItemValues","menuStyle","virtualized","className","menuClassName","id","renderMenu","getChildren","renderExtraFooter","onEntered","onChange","onClean","onClose","onExited","onSearch","onSelect","onOpen","onScroll","onExpand","renderValue","renderTreeIcon","renderTreeNode","rest","triggerRef","targetRef","listRef","overlayRef","treeViewRef","_useCustom","rtl","_useState","active","setActive","_useState2","activeNode","setActiveNode","_useClassNames","prefix","merge","_useClassNames2","checkTreePrefix","withCheckTreeClassPrefix","withClassPrefix","_useControlled","setValue","isControlled","_useGetTreeNodeChildr","treeData","setTreeData","setData","loadingNodeValues","loadChildren","_useControlled2","setExpandItemValues","_useState3","focusItemValue","setFocusItemValue","_useFlattenTreeData","callback","nodes","unSerializeList","key","forceUpdate","flattenNodes","formatVirtualizedTreeData","serializeListOnlyParent","_useTreeSearch","_filterData","event","filteredData","searchKeywordState","setSearchKeyword","handleSearch","setFilteredData","_useTreeNodeRefs","treeNodesRefs","saveTreeNodeRef","getFormattedNodes","render","formattedNodes","filter","item","showNode","visible","map","node","getTreeNodeProps","layer","label","focus","expand","loading","some","nodeData","checkState","uncheckable","allUncheckable","handleSelect","handleExpand","onRenderTreeNode","onRenderTreeIcon","focusActiveNode","list","current","selector","container","Array","isArray","toggleUpChecked","checked","currentNode","refKey","check","parent","toggleDownChecked","isChecked","length","forEach","child","toggleChecked","values","v","includes","selectedValues","hasValue","Object","keys","handleOpen","_triggerRef$current","_triggerRef$current$o","open","call","handleClose","_triggerRef$current2","_triggerRef$current2$","_targetRef$current","close","nextExpandItemValues","isExpand","handleClean","handleFocusItem","type","focusableItems","focusProps","nextFocusItemValue","DOWN","UP","handleLeftArrow","focusItem","onFocusItem","_focusItem$parent","_focusItem$parent2","handleRightArrow","selectActiveItem","activeItem","onPickerKeydown","toggle","onExit","down","up","left","right","enter","del","handleTreeKeydown","renderNode","children","visibleChildren","nodeProps","hasChildren","_merge","openClass","childrenClass","createElement","_ref","_ref2","renderVirtualListNode","_ref3","index","_ref4","renderCheckTree","_withCheckTreeClassPr","_merge2","classes","treeNodesClass","styles","undefined","role","onKeyDown","defaultHeight","width","_ref5","rowHeight","rowCount","rowRenderer","scrollToAlignment","renderDropdownMenu","positionProps","speakerRef","top","mergedMenuStyle","autoWidth","target","hasValidValue","selectedElement","selectedItems","_usePickerClassName","name","usedClassNamePropKeys","pickerProps","onEnter","speaker","concat","inputValue","displayName","propTypes","number","oneOf","bool","any","string","containerPadding","array","func"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _omit from \"lodash/omit\";\nimport _isFunction from \"lodash/isFunction\";\nimport _pick from \"lodash/pick\";\nimport _isNil from \"lodash/isNil\";\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { List, AutoSizer } from '../Picker/VirtualizedList';\nimport CheckTreeNode from './CheckTreeNode';\nimport { createChainedFunction, useCustom, useClassNames, useControlled, KEY_CODE, mergeRefs, shallowEqual } from '../utils';\nimport { PickerToggle, onMenuKeyDown as _onMenuKeyDown, PickerOverlay, SearchBar, SelectedElement, PickerToggleTrigger, createConcatChildrenFunction, usePickerClassName, usePublicMethods, pickTriggerPropKeys, omitTriggerPropKeys, listPickerPropTypes, listPickerDefaultProps, useToggleKeyDownEvent } from '../Picker';\nimport { isEveryChildChecked, isSomeNodeHasChildren, isAllSiblingNodeUncheckable, isEveryFirstLevelNodeUncheckable, getFormattedTree, getDisabledState, getCheckTreePickerDefaultValue, getSelectedItems, isNodeUncheckable } from './utils';\nimport { hasVisibleChildren, getExpandWhenSearching, useTreeSearch, useTreeNodeRefs, getDefaultExpandItemValues, useFlattenTreeData, focusNextItem, getFocusableItems, focusPreviousItem, toggleExpand, getActiveItem, useGetTreeNodeChildren, focusToActiveTreeNode, focusTreeNode, leftArrowHandler, rightArrowHandler } from '../utils/treeUtils';\nimport { maxTreeHeight } from '../TreePicker/TreePicker';\n\nvar defaultProps = _extends({}, listPickerDefaultProps, {\n  as: 'div',\n  height: 360,\n  cascade: true,\n  countable: true,\n  searchable: true,\n  menuAutoWidth: true,\n  defaultValue: [],\n  appearance: 'default',\n  uncheckableItemValues: [],\n  classPrefix: 'picker',\n  placement: 'bottomStart',\n  locale: {\n    placeholder: 'Select',\n    searchPlaceholder: 'Search',\n    noResultsText: 'No results found',\n    checkAll: 'All'\n  }\n});\n\nvar CheckTreePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var Component = props.as,\n      data = props.data,\n      style = props.style,\n      cleanable = props.cleanable,\n      countable = props.countable,\n      searchBy = props.searchBy,\n      toggleAs = props.toggleAs,\n      searchKeyword = props.searchKeyword,\n      overrideLocale = props.locale,\n      inline = props.inline,\n      cascade = props.cascade,\n      disabled = props.disabled,\n      valueKey = props.valueKey,\n      labelKey = props.labelKey,\n      placement = props.placement,\n      childrenKey = props.childrenKey,\n      placeholder = props.placeholder,\n      controlledValue = props.value,\n      defaultValue = props.defaultValue,\n      defaultExpandAll = props.defaultExpandAll,\n      disabledItemValues = props.disabledItemValues,\n      controlledExpandItemValues = props.expandItemValues,\n      defaultExpandItemValues = props.defaultExpandItemValues,\n      height = props.height,\n      menuStyle = props.menuStyle,\n      searchable = props.searchable,\n      virtualized = props.virtualized,\n      className = props.className,\n      classPrefix = props.classPrefix,\n      menuClassName = props.menuClassName,\n      menuAutoWidth = props.menuAutoWidth,\n      uncheckableItemValues = props.uncheckableItemValues,\n      id = props.id,\n      renderMenu = props.renderMenu,\n      getChildren = props.getChildren,\n      renderExtraFooter = props.renderExtraFooter,\n      onEntered = props.onEntered,\n      onChange = props.onChange,\n      onClean = props.onClean,\n      onClose = props.onClose,\n      onExited = props.onExited,\n      onSearch = props.onSearch,\n      onSelect = props.onSelect,\n      onOpen = props.onOpen,\n      onScroll = props.onScroll,\n      onExpand = props.onExpand,\n      renderValue = props.renderValue,\n      renderTreeIcon = props.renderTreeIcon,\n      renderTreeNode = props.renderTreeNode,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"data\", \"style\", \"cleanable\", \"countable\", \"searchBy\", \"toggleAs\", \"searchKeyword\", \"locale\", \"inline\", \"cascade\", \"disabled\", \"valueKey\", \"labelKey\", \"placement\", \"childrenKey\", \"placeholder\", \"value\", \"defaultValue\", \"defaultExpandAll\", \"disabledItemValues\", \"expandItemValues\", \"defaultExpandItemValues\", \"height\", \"menuStyle\", \"searchable\", \"virtualized\", \"className\", \"classPrefix\", \"menuClassName\", \"menuAutoWidth\", \"uncheckableItemValues\", \"id\", \"renderMenu\", \"getChildren\", \"renderExtraFooter\", \"onEntered\", \"onChange\", \"onClean\", \"onClose\", \"onExited\", \"onSearch\", \"onSelect\", \"onOpen\", \"onScroll\", \"onExpand\", \"renderValue\", \"renderTreeIcon\", \"renderTreeNode\"]);\n\n  var triggerRef = useRef();\n  var targetRef = useRef();\n  var listRef = useRef();\n  var overlayRef = useRef();\n  var treeViewRef = useRef();\n\n  var _useCustom = useCustom('Picker', overrideLocale),\n      rtl = _useCustom.rtl,\n      locale = _useCustom.locale;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(null),\n      activeNode = _useState2[0],\n      setActiveNode = _useState2[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge;\n\n  var _useClassNames2 = useClassNames('check-tree'),\n      checkTreePrefix = _useClassNames2.prefix,\n      withCheckTreeClassPrefix = _useClassNames2.withClassPrefix;\n\n  var _useControlled = useControlled(controlledValue, defaultValue),\n      value = _useControlled[0],\n      setValue = _useControlled[1],\n      isControlled = _useControlled[2];\n\n  var _useGetTreeNodeChildr = useGetTreeNodeChildren(data, valueKey, childrenKey),\n      treeData = _useGetTreeNodeChildr.data,\n      setTreeData = _useGetTreeNodeChildr.setData,\n      loadingNodeValues = _useGetTreeNodeChildr.loadingNodeValues,\n      loadChildren = _useGetTreeNodeChildr.loadChildren;\n\n  var _useControlled2 = useControlled(controlledExpandItemValues, getDefaultExpandItemValues(treeData, {\n    defaultExpandAll: defaultExpandAll,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    defaultExpandItemValues: defaultExpandItemValues\n  })),\n      expandItemValues = _useControlled2[0],\n      setExpandItemValues = _useControlled2[1];\n\n  var _useState3 = useState(null),\n      focusItemValue = _useState3[0],\n      setFocusItemValue = _useState3[1];\n\n  var _useFlattenTreeData = useFlattenTreeData({\n    data: treeData,\n    labelKey: labelKey,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    uncheckableItemValues: uncheckableItemValues,\n    callback: function callback(nodes) {\n      // after flattenData, always unSerialize check property value\n      unSerializeList({\n        nodes: nodes,\n        key: 'check',\n        value: value,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      forceUpdate();\n    }\n  }),\n      flattenNodes = _useFlattenTreeData.flattenNodes,\n      forceUpdate = _useFlattenTreeData.forceUpdate,\n      formatVirtualizedTreeData = _useFlattenTreeData.formatVirtualizedTreeData,\n      serializeListOnlyParent = _useFlattenTreeData.serializeListOnlyParent,\n      unSerializeList = _useFlattenTreeData.unSerializeList;\n\n  var _useTreeSearch = useTreeSearch({\n    labelKey: labelKey,\n    childrenKey: childrenKey,\n    searchKeyword: searchKeyword,\n    data: treeData,\n    searchBy: searchBy,\n    callback: function callback(searchKeyword, _filterData, event) {\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchKeyword, event);\n    }\n  }),\n      filteredData = _useTreeSearch.filteredData,\n      searchKeywordState = _useTreeSearch.searchKeywordState,\n      setSearchKeyword = _useTreeSearch.setSearchKeyword,\n      handleSearch = _useTreeSearch.handleSearch,\n      setFilteredData = _useTreeSearch.setFilteredData;\n\n  var _useTreeNodeRefs = useTreeNodeRefs(),\n      treeNodesRefs = _useTreeNodeRefs.treeNodesRefs,\n      saveTreeNodeRef = _useTreeNodeRefs.saveTreeNodeRef;\n  /**\n   * get formatted nodes for render tree\n   * @params render - renderNode function. only used when virtualized setting false\n   */\n\n\n  var getFormattedNodes = useCallback(function (render) {\n    var formattedNodes = [];\n\n    if (virtualized) {\n      formattedNodes = formatVirtualizedTreeData(flattenNodes, filteredData, expandItemValues, cascade).filter(function (item) {\n        return item.showNode && item.visible;\n      });\n    } else {\n      formattedNodes = getFormattedTree(filteredData, flattenNodes, {\n        childrenKey: childrenKey,\n        cascade: cascade\n      }).map(function (node) {\n        return render === null || render === void 0 ? void 0 : render(node, 1);\n      });\n    }\n\n    return formattedNodes;\n  }, [expandItemValues, filteredData, flattenNodes, formatVirtualizedTreeData, virtualized, childrenKey, cascade]);\n\n  var getTreeNodeProps = function getTreeNodeProps(node, layer) {\n    return {\n      as: Component,\n      rtl: rtl,\n      value: node[valueKey],\n      label: node[labelKey],\n      layer: layer,\n      focus: shallowEqual(focusItemValue, node[valueKey]),\n      expand: node.expand,\n      visible: node.visible,\n      loading: loadingNodeValues.some(function (item) {\n        return shallowEqual(item, node[valueKey]);\n      }),\n      disabled: getDisabledState(flattenNodes, node, {\n        disabledItemValues: disabledItemValues,\n        valueKey: valueKey\n      }),\n      nodeData: node,\n      checkState: node.checkState,\n      uncheckable: isNodeUncheckable(node, {\n        uncheckableItemValues: uncheckableItemValues,\n        valueKey: valueKey\n      }),\n      allUncheckable: isAllSiblingNodeUncheckable(node, flattenNodes, uncheckableItemValues, valueKey),\n      onSelect: handleSelect,\n      onExpand: handleExpand,\n      onRenderTreeNode: renderTreeNode,\n      onRenderTreeIcon: renderTreeIcon\n    };\n  };\n\n  var focusActiveNode = useCallback(function () {\n    focusToActiveTreeNode({\n      list: listRef.current,\n      valueKey: valueKey,\n      selector: \".\" + checkTreePrefix('node-active'),\n      activeNode: activeNode,\n      virtualized: virtualized,\n      container: treeViewRef.current,\n      formattedNodes: getFormattedNodes()\n    });\n  }, [checkTreePrefix, activeNode, getFormattedNodes, valueKey, virtualized]);\n  useEffect(function () {\n    setValue(getCheckTreePickerDefaultValue(value, uncheckableItemValues));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setFilteredData(data, searchKeywordState);\n    setTreeData(data);\n  }, [data, searchKeywordState, setFilteredData, setTreeData]);\n  useEffect(function () {\n    setFilteredData(treeData, searchKeywordState);\n  }, [treeData, searchKeywordState, setFilteredData]);\n  useEffect(function () {\n    if (Array.isArray(controlledExpandItemValues)) {\n      setExpandItemValues(controlledExpandItemValues);\n    }\n  }, [controlledExpandItemValues, setExpandItemValues]);\n  useEffect(function () {\n    setSearchKeyword(searchKeyword !== null && searchKeyword !== void 0 ? searchKeyword : '');\n  }, [searchKeyword, setSearchKeyword]);\n  useEffect(function () {\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: value,\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    forceUpdate();\n  }, [cascade, value, uncheckableItemValues, unSerializeList, flattenNodes, forceUpdate]);\n  var toggleUpChecked = useCallback(function (nodes, node, checked) {\n    var currentNode = nodes[node.refKey];\n\n    if (cascade) {\n      if (!checked) {\n        currentNode.check = checked;\n        currentNode.checkAll = checked;\n      } else {\n        if (isEveryChildChecked(nodes, currentNode)) {\n          currentNode.check = true;\n          currentNode.checkAll = true;\n        } else {\n          currentNode.check = false;\n          currentNode.checkAll = false;\n        }\n      }\n\n      if (currentNode.parent) {\n        toggleUpChecked(nodes, currentNode.parent, checked);\n      }\n    }\n  }, [cascade]);\n  var toggleDownChecked = useCallback(function (nodes, node, isChecked) {\n    var currentNode = nodes[node.refKey];\n    currentNode.check = isChecked;\n\n    if (!currentNode[childrenKey] || !currentNode[childrenKey].length || !cascade) {\n      currentNode.checkAll = false;\n    } else {\n      currentNode.checkAll = isChecked;\n      currentNode[childrenKey].forEach(function (child) {\n        toggleDownChecked(nodes, child, isChecked);\n      });\n    }\n  }, [cascade, childrenKey]);\n  var toggleChecked = useCallback(function (node, isChecked) {\n    var nodes = _cloneDeep(flattenNodes);\n\n    toggleDownChecked(nodes, node, isChecked);\n    node.parent && toggleUpChecked(nodes, node.parent, isChecked);\n    var values = serializeListOnlyParent(nodes, 'check'); // filter uncheckableItemValues\n\n    return values.filter(function (v) {\n      return !uncheckableItemValues.includes(v);\n    });\n  }, [flattenNodes, uncheckableItemValues, serializeListOnlyParent, toggleDownChecked, toggleUpChecked]);\n  var handleSelect = useCallback(function (node, event) {\n    if (!node) {\n      return;\n    }\n\n    var selectedValues = toggleChecked(node, !flattenNodes[node.refKey].check);\n\n    if (!isControlled) {\n      unSerializeList({\n        nodes: flattenNodes,\n        key: 'check',\n        value: selectedValues,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      setValue(selectedValues);\n    }\n\n    setActiveNode(node);\n    setFocusItemValue(node[valueKey]);\n    onChange === null || onChange === void 0 ? void 0 : onChange(selectedValues, event);\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(node, selectedValues, event);\n  }, [cascade, valueKey, flattenNodes, isControlled, uncheckableItemValues, setValue, onChange, onSelect, toggleChecked, unSerializeList]);\n\n  var hasValue = function hasValue() {\n    var selectedValues = Object.keys(flattenNodes).map(function (refKey) {\n      return flattenNodes[refKey][valueKey];\n    }).filter(function (item) {\n      return value.some(function (v) {\n        return shallowEqual(v, item);\n      });\n    });\n    return !!selectedValues.length;\n  };\n\n  var handleOpen = useCallback(function () {\n    var _triggerRef$current, _triggerRef$current$o;\n\n    (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$o = _triggerRef$current.open) === null || _triggerRef$current$o === void 0 ? void 0 : _triggerRef$current$o.call(_triggerRef$current);\n    setFocusItemValue(activeNode === null || activeNode === void 0 ? void 0 : activeNode[valueKey]);\n    focusActiveNode();\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    setActive(true);\n  }, [activeNode, focusActiveNode, onOpen, valueKey]);\n  var handleClose = useCallback(function () {\n    var _triggerRef$current2, _triggerRef$current2$, _targetRef$current;\n\n    (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : (_triggerRef$current2$ = _triggerRef$current2.close) === null || _triggerRef$current2$ === void 0 ? void 0 : _triggerRef$current2$.call(_triggerRef$current2);\n    setSearchKeyword('');\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n    setFocusItemValue(null);\n    setActive(false);\n    /**\n     * when using keyboard toggle picker, should refocus on PickerToggle Component after close picker menu\n     */\n\n    (_targetRef$current = targetRef.current) === null || _targetRef$current === void 0 ? void 0 : _targetRef$current.focus();\n  }, [onClose, setSearchKeyword]);\n  var handleExpand = useCallback(function (node) {\n    var nextExpandItemValues = toggleExpand({\n      node: node,\n      isExpand: !node.expand,\n      expandItemValues: expandItemValues,\n      valueKey: valueKey\n    });\n    setExpandItemValues(nextExpandItemValues);\n    onExpand === null || onExpand === void 0 ? void 0 : onExpand(nextExpandItemValues, node, createConcatChildrenFunction(node, node[valueKey], {\n      valueKey: valueKey,\n      childrenKey: childrenKey\n    }));\n\n    if (_isFunction(getChildren) && !node.expand && Array.isArray(node[childrenKey]) && node[childrenKey].length === 0) {\n      loadChildren(node, getChildren);\n    }\n  }, [childrenKey, expandItemValues, getChildren, loadChildren, onExpand, setExpandItemValues, valueKey]);\n  usePublicMethods(ref, {\n    triggerRef: triggerRef,\n    overlayRef: overlayRef,\n    targetRef: targetRef\n  });\n  var handleClean = useCallback(function (event) {\n    setActiveNode(null);\n    setValue([]);\n    setFocusItemValue(null);\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: [],\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    onChange === null || onChange === void 0 ? void 0 : onChange([], event);\n  }, [cascade, flattenNodes, onChange, setValue, unSerializeList, uncheckableItemValues]);\n  var handleFocusItem = useCallback(function (type) {\n    var focusableItems = getFocusableItems(filteredData, {\n      disabledItemValues: disabledItemValues,\n      valueKey: valueKey,\n      childrenKey: childrenKey,\n      expandItemValues: expandItemValues\n    });\n    var selector = \".\" + checkTreePrefix('node-label');\n    var focusProps = {\n      focusItemValue: focusItemValue,\n      focusableItems: focusableItems,\n      treeNodesRefs: treeNodesRefs,\n      selector: selector,\n      valueKey: valueKey,\n      callback: function callback(nextFocusItemValue) {\n        setFocusItemValue(nextFocusItemValue);\n      }\n    };\n\n    if (type === KEY_CODE.DOWN) {\n      focusNextItem(focusProps);\n      return;\n    }\n\n    if (type === KEY_CODE.UP) {\n      focusPreviousItem(focusProps);\n    }\n  }, [checkTreePrefix, expandItemValues, filteredData, focusItemValue, treeNodesRefs, childrenKey, valueKey, disabledItemValues]);\n  var handleLeftArrow = useCallback(function () {\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    leftArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      onExpand: handleExpand,\n      onFocusItem: function onFocusItem() {\n        var _focusItem$parent, _focusItem$parent2;\n\n        setFocusItemValue(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent = focusItem.parent) === null || _focusItem$parent === void 0 ? void 0 : _focusItem$parent[valueKey]);\n        focusTreeNode(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent2 = focusItem.parent) === null || _focusItem$parent2 === void 0 ? void 0 : _focusItem$parent2.refKey, treeNodesRefs, \".\" + checkTreePrefix('node-label'));\n      }\n    });\n  }, [checkTreePrefix, expandItemValues, flattenNodes, focusItemValue, handleExpand, treeNodesRefs, valueKey]);\n  var handleRightArrow = useCallback(function () {\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    rightArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      childrenKey: childrenKey,\n      onExpand: handleExpand,\n      onFocusItem: function onFocusItem() {\n        handleFocusItem(KEY_CODE.DOWN);\n      }\n    });\n  }, [focusItemValue, flattenNodes, valueKey, expandItemValues, childrenKey, handleExpand, handleFocusItem]);\n  var selectActiveItem = useCallback(function (event) {\n    var activeItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n\n    if (!isNodeUncheckable(activeItem, {\n      uncheckableItemValues: uncheckableItemValues,\n      valueKey: valueKey\n    }) && activeItem !== null) {\n      handleSelect(activeItem, event);\n    }\n  }, [flattenNodes, focusItemValue, handleSelect, uncheckableItemValues, valueKey]);\n  var onPickerKeydown = useToggleKeyDownEvent({\n    toggle: !focusItemValue || !active,\n    triggerRef: triggerRef,\n    targetRef: targetRef,\n    overlayRef: overlayRef,\n    active: active,\n    onExit: handleClean,\n    onClose: handleClose,\n    onMenuKeyDown: function onMenuKeyDown(event) {\n      _onMenuKeyDown(event, {\n        down: function down() {\n          return handleFocusItem(KEY_CODE.DOWN);\n        },\n        up: function up() {\n          return handleFocusItem(KEY_CODE.UP);\n        },\n        left: rtl ? handleRightArrow : handleLeftArrow,\n        right: rtl ? handleLeftArrow : handleRightArrow,\n        enter: selectActiveItem,\n        del: handleClean\n      });\n    }\n  });\n  var handleTreeKeydown = useCallback(function (event) {\n    if (!treeViewRef.current) {\n      return;\n    }\n\n    _onMenuKeyDown(event, {\n      down: function down() {\n        return handleFocusItem(KEY_CODE.DOWN);\n      },\n      up: function up() {\n        return handleFocusItem(KEY_CODE.UP);\n      },\n      left: rtl ? handleRightArrow : handleLeftArrow,\n      right: rtl ? handleLeftArrow : handleRightArrow,\n      enter: selectActiveItem\n    });\n  }, [handleFocusItem, handleLeftArrow, handleRightArrow, rtl, selectActiveItem]);\n\n  var renderNode = function renderNode(node, layer) {\n    var visible = node.visible,\n        refKey = node.refKey; // when searching, all nodes should be expand\n\n    var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n    if (!visible) {\n      return null;\n    }\n\n    var children = node[childrenKey];\n    var visibleChildren = _isUndefined(searchKeywordState) || searchKeywordState.length === 0 ? !!children : hasVisibleChildren(node, childrenKey);\n\n    var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n      expand: expand\n    }), layer), {\n      hasChildren: visibleChildren\n    });\n\n    if (nodeProps.hasChildren) {\n      var _merge;\n\n      layer += 1;\n      var openClass = checkTreePrefix('open');\n      var childrenClass = merge(checkTreePrefix('node-children'), (_merge = {}, _merge[openClass] = expand && visibleChildren, _merge));\n      var nodes = children || [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: childrenClass,\n        key: node[valueKey]\n      }, /*#__PURE__*/React.createElement(CheckTreeNode, _extends({}, nodeProps, {\n        ref: function ref(_ref) {\n          return saveTreeNodeRef(refKey, _ref);\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: checkTreePrefix('children')\n      }, nodes.map(function (child) {\n        return renderNode(child, layer);\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n      key: node[valueKey],\n      ref: function ref(_ref2) {\n        return saveTreeNodeRef(refKey, _ref2);\n      }\n    }, nodeProps));\n  };\n\n  var renderVirtualListNode = function renderVirtualListNode(nodes) {\n    return function (_ref3) {\n      var key = _ref3.key,\n          index = _ref3.index,\n          style = _ref3.style;\n      var node = nodes[index];\n      var layer = node.layer,\n          refKey = node.refKey,\n          showNode = node.showNode;\n      var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n      var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n        expand: expand\n      }), layer), {\n        hasChildren: node.hasChildren\n      });\n\n      return showNode && /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n        style: style,\n        key: key,\n        ref: function ref(_ref4) {\n          return saveTreeNodeRef(refKey, _ref4);\n        }\n      }, nodeProps));\n    };\n  };\n\n  var renderCheckTree = function renderCheckTree() {\n    var _withCheckTreeClassPr, _merge2;\n\n    var classes = withCheckTreeClassPrefix((_withCheckTreeClassPr = {}, _withCheckTreeClassPr[className !== null && className !== void 0 ? className : ''] = inline, _withCheckTreeClassPr['without-children'] = !isSomeNodeHasChildren, _withCheckTreeClassPr.virtualized = virtualized, _withCheckTreeClassPr));\n    var formattedNodes = getFormattedNodes(renderNode);\n\n    if (!formattedNodes.some(function (v) {\n      return v !== null;\n    })) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('none')\n      }, locale.noResultsText);\n    }\n\n    var treeNodesClass = merge(checkTreePrefix('nodes'), (_merge2 = {}, _merge2[checkTreePrefix('all-uncheckable')] = isEveryFirstLevelNodeUncheckable(flattenNodes, uncheckableItemValues, valueKey), _merge2));\n    var styles = inline ? _extends({\n      height: height\n    }, style) : {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id ? id + \"-listbox\" : undefined,\n      ref: treeViewRef,\n      role: \"tree\",\n      \"aria-multiselectable\": true,\n      className: classes,\n      style: styles,\n      onScroll: onScroll,\n      onKeyDown: inline ? handleTreeKeydown : undefined\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: treeNodesClass\n    }, virtualized ? /*#__PURE__*/React.createElement(AutoSizer, {\n      defaultHeight: inline ? height : maxTreeHeight,\n      style: {\n        width: 'auto',\n        height: 'auto'\n      }\n    }, function (_ref5) {\n      var height = _ref5.height,\n          width = _ref5.width;\n      return /*#__PURE__*/React.createElement(List, {\n        ref: listRef,\n        width: width,\n        height: height,\n        rowHeight: 36,\n        rowCount: formattedNodes.length,\n        rowRenderer: renderVirtualListNode(formattedNodes),\n        scrollToAlignment: \"center\"\n      });\n    }) : formattedNodes));\n  };\n\n  var renderDropdownMenu = function renderDropdownMenu(positionProps, speakerRef) {\n    var left = positionProps.left,\n        top = positionProps.top,\n        className = positionProps.className;\n    var classes = classNames(className, menuClassName, prefix('check-tree-menu'));\n\n    var mergedMenuStyle = _extends({}, menuStyle, {\n      left: left,\n      top: top\n    });\n\n    var styles = virtualized ? _extends({\n      height: height\n    }, mergedMenuStyle) : _extends({}, mergedMenuStyle);\n    return /*#__PURE__*/React.createElement(PickerOverlay, {\n      autoWidth: menuAutoWidth,\n      className: classes,\n      style: styles,\n      ref: mergeRefs(overlayRef, speakerRef),\n      onKeyDown: onPickerKeydown,\n      target: triggerRef\n    }, searchable ? /*#__PURE__*/React.createElement(SearchBar, {\n      placeholder: locale.searchPlaceholder,\n      onChange: handleSearch,\n      value: searchKeywordState\n    }) : null, renderMenu ? renderMenu(renderCheckTree()) : renderCheckTree(), renderExtraFooter === null || renderExtraFooter === void 0 ? void 0 : renderExtraFooter());\n  };\n  /**\n   * 1.Have a value and the value is valid.\n   * 2.Regardless of whether the value is valid, as long as renderValue is set, it is judged to have a value.\n   */\n\n\n  var hasValidValue = hasValue() || value.length > 0 && _isFunction(renderValue);\n\n  var selectedElement = placeholder;\n  var selectedItems = getSelectedItems(flattenNodes, value, valueKey);\n\n  if (hasValidValue) {\n    selectedElement = /*#__PURE__*/React.createElement(SelectedElement, {\n      selectedItems: selectedItems,\n      countable: countable,\n      valueKey: valueKey,\n      labelKey: labelKey,\n      childrenKey: childrenKey,\n      prefix: prefix,\n      cascade: cascade,\n      locale: locale\n    });\n\n    if (_isFunction(renderValue)) {\n      selectedElement = renderValue(value, selectedItems, selectedElement);\n\n      if (_isNil(selectedElement)) {\n        hasValidValue = false;\n      }\n    }\n  }\n\n  var _usePickerClassName = usePickerClassName(_extends({}, props, {\n    hasValue: hasValidValue,\n    name: 'check-tree'\n  })),\n      classes = _usePickerClassName[0],\n      usedClassNamePropKeys = _usePickerClassName[1];\n\n  if (inline) {\n    return renderCheckTree();\n  }\n\n  return /*#__PURE__*/React.createElement(PickerToggleTrigger, {\n    pickerProps: _pick(props, pickTriggerPropKeys),\n    ref: triggerRef,\n    placement: placement,\n    onEnter: handleOpen,\n    onEntered: onEntered,\n    onExited: createChainedFunction(handleClose, onExited),\n    speaker: renderDropdownMenu\n  }, /*#__PURE__*/React.createElement(Component, {\n    className: classes,\n    style: style\n  }, /*#__PURE__*/React.createElement(PickerToggle, _extends({}, _omit(rest, [].concat(omitTriggerPropKeys, usedClassNamePropKeys)), {\n    id: id,\n    ref: targetRef,\n    onKeyDown: onPickerKeydown,\n    onClean: createChainedFunction(handleClean, onClean),\n    cleanable: cleanable && !disabled,\n    disabled: disabled,\n    as: toggleAs,\n    hasValue: hasValidValue,\n    active: active,\n    placement: placement,\n    inputValue: value\n  }), selectedElement || locale.placeholder)));\n});\nCheckTreePicker.displayName = 'CheckTreePicker';\nCheckTreePicker.defaultProps = defaultProps;\nCheckTreePicker.propTypes = _extends({}, listPickerPropTypes, {\n  height: PropTypes.number,\n  appearance: PropTypes.oneOf(['default', 'subtle']),\n  inline: PropTypes.bool,\n  locale: PropTypes.any,\n  cascade: PropTypes.bool,\n  countable: PropTypes.bool,\n  searchable: PropTypes.bool,\n  virtualized: PropTypes.bool,\n  searchKeyword: PropTypes.string,\n  menuAutoWidth: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  containerPadding: PropTypes.number,\n  disabledItemValues: PropTypes.array,\n  expandItemValues: PropTypes.array,\n  defaultExpandItemValues: PropTypes.array,\n  uncheckableItemValues: PropTypes.array,\n  onSearch: PropTypes.func,\n  onExpand: PropTypes.func,\n  onSelect: PropTypes.func,\n  renderMenu: PropTypes.func,\n  renderTreeNode: PropTypes.func,\n  renderTreeIcon: PropTypes.func,\n  searchBy: PropTypes.func,\n  onScroll: PropTypes.func\n});\nexport default CheckTreePicker;"]},"metadata":{},"sourceType":"module"}