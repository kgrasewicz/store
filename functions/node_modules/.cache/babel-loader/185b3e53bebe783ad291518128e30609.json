{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Ripple from '../Ripple';\nimport Button from '../Button';\nimport { useClassNames } from '../utils';\nimport useToggleCaret from '../utils/useToggleCaret';\nvar defaultProps = {\n  as: Button,\n  classPrefix: 'dropdown-toggle'\n};\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var Component = props.as,\n      className = props.className,\n      classPrefix = props.classPrefix,\n      renderTitle = props.renderTitle,\n      children = props.children,\n      icon = props.icon,\n      noCaret = props.noCaret,\n      placement = props.placement,\n      inSidenav = props.inSidenav,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"className\", \"classPrefix\", \"renderTitle\", \"children\", \"icon\", \"noCaret\", \"placement\", \"inSidenav\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge;\n\n  var classes = merge(className, withClassPrefix({\n    'custom-title': typeof renderTitle === 'function'\n  })); // Caret icon is down by default, when Dropdown is used in Sidenav.\n\n  var Caret = useToggleCaret(inSidenav ? 'bottomStart' : placement);\n\n  if (renderTitle) {\n    return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n      ref: ref,\n      className: classes\n    }), renderTitle(children), /*#__PURE__*/React.createElement(Ripple, null));\n  }\n\n  var buttonProps = Component === Button ? {\n    appearance: 'subtle'\n  } : null;\n  return /*#__PURE__*/React.createElement(Component, _extends({}, buttonProps, rest, {\n    ref: ref,\n    className: classes\n  }), icon, children, noCaret ? null : /*#__PURE__*/React.createElement(Caret, {\n    className: prefix('caret')\n  }));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nDropdownToggle.defaultProps = defaultProps;\nDropdownToggle.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  icon: PropTypes.node,\n  classPrefix: PropTypes.string,\n  noCaret: PropTypes.bool,\n  as: PropTypes.elementType,\n  renderTitle: PropTypes.func\n};\nexport default DropdownToggle;","map":{"version":3,"sources":["C:/Programowanie/store/node_modules/rsuite/es/Dropdown/DropdownToggle.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","Ripple","Button","useClassNames","useToggleCaret","defaultProps","as","classPrefix","DropdownToggle","forwardRef","props","ref","Component","className","renderTitle","children","icon","noCaret","placement","inSidenav","rest","_useClassNames","prefix","withClassPrefix","merge","classes","Caret","createElement","buttonProps","appearance","displayName","propTypes","string","node","bool","elementType","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Ripple from '../Ripple';\nimport Button from '../Button';\nimport { useClassNames } from '../utils';\nimport useToggleCaret from '../utils/useToggleCaret';\nvar defaultProps = {\n  as: Button,\n  classPrefix: 'dropdown-toggle'\n};\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var Component = props.as,\n      className = props.className,\n      classPrefix = props.classPrefix,\n      renderTitle = props.renderTitle,\n      children = props.children,\n      icon = props.icon,\n      noCaret = props.noCaret,\n      placement = props.placement,\n      inSidenav = props.inSidenav,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"className\", \"classPrefix\", \"renderTitle\", \"children\", \"icon\", \"noCaret\", \"placement\", \"inSidenav\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge;\n\n  var classes = merge(className, withClassPrefix({\n    'custom-title': typeof renderTitle === 'function'\n  })); // Caret icon is down by default, when Dropdown is used in Sidenav.\n\n  var Caret = useToggleCaret(inSidenav ? 'bottomStart' : placement);\n\n  if (renderTitle) {\n    return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n      ref: ref,\n      className: classes\n    }), renderTitle(children), /*#__PURE__*/React.createElement(Ripple, null));\n  }\n\n  var buttonProps = Component === Button ? {\n    appearance: 'subtle'\n  } : null;\n  return /*#__PURE__*/React.createElement(Component, _extends({}, buttonProps, rest, {\n    ref: ref,\n    className: classes\n  }), icon, children, noCaret ? null : /*#__PURE__*/React.createElement(Caret, {\n    className: prefix('caret')\n  }));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nDropdownToggle.defaultProps = defaultProps;\nDropdownToggle.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  icon: PropTypes.node,\n  classPrefix: PropTypes.string,\n  noCaret: PropTypes.bool,\n  as: PropTypes.elementType,\n  renderTitle: PropTypes.func\n};\nexport default DropdownToggle;"]},"metadata":{},"sourceType":"module"}