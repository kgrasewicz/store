{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programowanie\\\\store\\\\src\\\\Paginate.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchPageNumbers = () => {\n      const totalPages = this.totalPages;\n      const currentPage = this.state.currentPage;\n      const pageNeighbours = this.pageNeighbours;\n      /**\r\n       * totalNumbers: the total page numbers to show on the control\r\n       * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\r\n       */\n\n      const totalNumbers = this.pageNeighbours * 2 + 3;\n      const totalBlocks = totalNumbers + 2;\n\n      if (totalPages > totalBlocks) {\n        const startPage = Math.max(2, currentPage - pageNeighbours);\n        const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n        let pages = _.range(startPage, endPage);\n        /**\r\n         * hasLeftSpill: has hidden pages to the left\r\n         * hasRightSpill: has hidden pages to the right\r\n         * spillOffset: number of hidden pages either to the left or to the right\r\n         */\n\n\n        const hasLeftSpill = startPage > 2;\n        const hasRightSpill = totalPages - endPage > 1;\n        const spillOffset = totalNumbers - (pages.length + 1);\n\n        switch (true) {\n          // handle: (1) < {5 6} [7] {8 9} (10)\n          case hasLeftSpill && !hasRightSpill:\n            {\n              const extraPages = _.range(startPage - spillOffset, startPage - 1);\n\n              pages = [LEFT_PAGE, ...extraPages, ...pages];\n              break;\n            }\n          // handle: (1) {2 3} [4] {5 6} > (10)\n\n          case !hasLeftSpill && hasRightSpill:\n            {\n              const extraPages = _.range(endPage + 1, endPage + spillOffset);\n\n              pages = [...pages, ...extraPages, RIGHT_PAGE];\n              break;\n            }\n          // handle: (1) < {4 5} [6] {7 8} > (10)\n\n          case hasLeftSpill && hasRightSpill:\n          default:\n            {\n              pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n              break;\n            }\n        }\n\n        return [1, ...pages, totalPages];\n      }\n\n      return _.range(1, totalPages);\n    };\n\n    this.gotoPage = page => {\n      const {\n        onPageChanged = f => f\n      } = this.props;\n      const currentPage = Math.max(0, Math.min(page, this.totalPages));\n      const paginationData = {\n        currentPage,\n        totalPages: this.totalPages,\n        pageLimit: this.pageLimit,\n        totalRecords: this.totalRecords\n      };\n      this.setState({\n        currentPage\n      }, () => onPageChanged(paginationData));\n    };\n\n    this.handleClick = page => evt => {\n      this.gotoPage(page);\n    };\n\n    this.handleMoveLeft = evt => {\n      this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\n    };\n\n    this.handleMoveRight = evt => {\n      this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\n    };\n\n    const {\n      totalRecords = null,\n      pageLimit = 30,\n      pageNeighbours: _pageNeighbours = 0\n    } = props;\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0; // pageNeighbours can be: 0, 1 or 2\n\n    this.pageNeighbours = typeof _pageNeighbours === 'number' ? Math.max(0, Math.min(_pageNeighbours, 2)) : 0;\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n    this.state = {\n      currentPage: 1\n    };\n  }\n\n  render() {\n    if (!this.totalRecords || this.totalPages === 1) return null;\n    const {\n      currentPage\n    } = this.state;\n    const pages = this.fetchPageNumbers();\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        \"aria-label\": \"Countries Pagination\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pagination\",\n          children: pages.map((page, index) => {\n            if (page === LEFT_PAGE) return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"page-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                href: \"#\",\n                \"aria-label\": \"Previous\",\n                onClick: this.handleMoveLeft,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xAB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sr-only\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Previous\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this);\n            if (page === RIGHT_PAGE) return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"page-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                href: \"#\",\n                \"aria-label\": \"Next\",\n                onClick: this.handleMoveRight,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xBB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sr-only\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this);\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `page-item${currentPage === page ? ' active' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                href: \"#\",\n                onClick: this.handleClick(page),\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: page\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 92\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this);\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\nexport default Pagination;","map":{"version":3,"sources":["C:/Programowanie/store/src/Paginate.js"],"names":["React","Component","Fragment","PropTypes","_","LEFT_PAGE","RIGHT_PAGE","Pagination","constructor","props","fetchPageNumbers","totalPages","currentPage","state","pageNeighbours","totalNumbers","totalBlocks","startPage","Math","max","endPage","min","pages","range","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","gotoPage","page","onPageChanged","f","paginationData","pageLimit","totalRecords","setState","handleClick","evt","handleMoveLeft","handleMoveRight","ceil","render","map","index","componentDidMount","propTypes","number","isRequired","func"],"mappings":"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","sourcesContent":["\r\nimport React, { Component, Fragment } from \"react\";\r\nimport PropTypes from 'prop-types';  \r\nimport _ from \"lodash\"\r\n\r\n\r\nconst LEFT_PAGE = 'LEFT';\r\nconst RIGHT_PAGE = 'RIGHT';\r\n\r\n\r\n\r\nclass Pagination extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n  \r\n      this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\r\n      this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\r\n  \r\n      // pageNeighbours can be: 0, 1 or 2\r\n      this.pageNeighbours = typeof pageNeighbours === 'number'\r\n        ? Math.max(0, Math.min(pageNeighbours, 2))\r\n        : 0;\r\n  \r\n      this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n  \r\n      this.state = { currentPage: 1 };\r\n    }\r\n\r\n    fetchPageNumbers = () => {\r\n        const totalPages = this.totalPages;\r\n        const currentPage = this.state.currentPage;\r\n        const pageNeighbours = this.pageNeighbours;\r\n    \r\n        /**\r\n         * totalNumbers: the total page numbers to show on the control\r\n         * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\r\n         */\r\n        const totalNumbers = (this.pageNeighbours * 2) + 3;\r\n        const totalBlocks = totalNumbers + 2;\r\n    \r\n        if (totalPages > totalBlocks) {\r\n          const startPage = Math.max(2, currentPage - pageNeighbours);\r\n          const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n          let pages = _.range(startPage, endPage);\r\n    \r\n          /**\r\n           * hasLeftSpill: has hidden pages to the left\r\n           * hasRightSpill: has hidden pages to the right\r\n           * spillOffset: number of hidden pages either to the left or to the right\r\n           */\r\n          const hasLeftSpill = startPage > 2;\r\n          const hasRightSpill = (totalPages - endPage) > 1;\r\n          const spillOffset = totalNumbers - (pages.length + 1);\r\n    \r\n          switch (true) {\r\n            // handle: (1) < {5 6} [7] {8 9} (10)\r\n            case (hasLeftSpill && !hasRightSpill): {\r\n              const extraPages = _.range(startPage - spillOffset, startPage - 1);\r\n              pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n              break;\r\n            }\r\n    \r\n            // handle: (1) {2 3} [4] {5 6} > (10)\r\n            case (!hasLeftSpill && hasRightSpill): {\r\n              const extraPages = _.range(endPage + 1, endPage + spillOffset);\r\n              pages = [...pages, ...extraPages, RIGHT_PAGE];\r\n              break;\r\n            }\r\n    \r\n            // handle: (1) < {4 5} [6] {7 8} > (10)\r\n            case (hasLeftSpill && hasRightSpill):\r\n            default: {\r\n              pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n              break;\r\n            }\r\n          }\r\n    \r\n          return [1, ...pages, totalPages];\r\n        }\r\n    \r\n        return _.range(1, totalPages);\r\n      }\r\n\r\n      render() {\r\n        if (!this.totalRecords || this.totalPages === 1) return null;\r\n    \r\n        const { currentPage } = this.state;\r\n        const pages = this.fetchPageNumbers();\r\n    \r\n        return (\r\n          <Fragment>\r\n            <div aria-label=\"Countries Pagination\">\r\n              <ul className=\"pagination\">\r\n                { pages.map((page, index) => {\r\n    \r\n                  if (page === LEFT_PAGE) return (\r\n                    <li key={index} className=\"page-item\">\r\n                      <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\r\n                        <span aria-hidden=\"true\">&laquo;</span>\r\n                        <span className=\"sr-only\"><h3>Previous</h3></span>\r\n                      </a>\r\n                    </li>\r\n                  );\r\n    \r\n                  if (page === RIGHT_PAGE) return (\r\n                    <li key={index} className=\"page-item\">\r\n                      <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                        <span className=\"sr-only\"><h3>Next</h3></span>\r\n                      </a>\r\n                    </li>\r\n                  );\r\n    \r\n                  return (\r\n                    <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\r\n                      <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }><h3>{ page }</h3></a>\r\n                    </li>\r\n                  );\r\n    \r\n                }) }\r\n    \r\n              </ul>\r\n            </div>\r\n          </Fragment>\r\n        );\r\n\r\n        \r\n      }\r\n\r\n      componentDidMount() {\r\n    this.gotoPage(1);\r\n  }\r\n\r\n  gotoPage = page => {\r\n    const { onPageChanged = f => f } = this.props;\r\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: this.totalPages,\r\n      pageLimit: this.pageLimit,\r\n      totalRecords: this.totalRecords\r\n    };\r\n\r\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  }\r\n\r\n  handleClick = page => evt => {\r\n\r\n    this.gotoPage(page);\r\n  }\r\n\r\n  handleMoveLeft = evt => {\r\n\r\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\r\n  }\r\n\r\n  handleMoveRight = evt => {\r\n\r\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\r\n  }\r\n    \r\n  }\r\n  \r\n  Pagination.propTypes = {\r\n    totalRecords: PropTypes.number.isRequired,\r\n    pageLimit: PropTypes.number,\r\n    pageNeighbours: PropTypes.number,\r\n    onPageChanged: PropTypes.func\r\n  };\r\n\r\n  \r\n  \r\n  export default Pagination;"]},"metadata":{},"sourceType":"module"}